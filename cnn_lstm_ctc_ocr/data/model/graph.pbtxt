node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "..\\data\\train\\words-0.tfrecord"
        string_val: "..\\data\\train\\words-1.tfrecord"
        string_val: "..\\data\\train\\words-10.tfrecord"
        string_val: "..\\data\\train\\words-2.tfrecord"
        string_val: "..\\data\\train\\words-3.tfrecord"
        string_val: "..\\data\\train\\words-4.tfrecord"
        string_val: "..\\data\\train\\words-5.tfrecord"
        string_val: "..\\data\\train\\words-6.tfrecord"
        string_val: "..\\data\\train\\words-7.tfrecord"
        string_val: "..\\data\\train\\words-8.tfrecord"
        string_val: "..\\data\\train\\words-9.tfrecord"
      }
    }
  }
}
node {
  name: "input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/Greater"
  op: "Greater"
  input: "input_producer/Size"
  input: "input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "input_producer/Assert/Assert"
  op: "Assert"
  input: "input_producer/Greater"
  input: "input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "input_producer/Identity"
  op: "Identity"
  input: "input_producer/Const"
  input: "^input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "input_producer"
  input: "input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/ToFloat"
  op: "Cast"
  input: "input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001953125
      }
    }
  }
}
node {
  name: "input_producer/mul"
  op: "Mul"
  input: "input_producer/ToFloat"
  input: "input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/fraction_of_512_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_producer/fraction_of_512_full"
      }
    }
  }
}
node {
  name: "input_producer/fraction_of_512_full"
  op: "ScalarSummary"
  input: "input_producer/fraction_of_512_full/tags"
  input: "input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TFRecordReaderV2"
  op: "TFRecordReaderV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ReaderReadV2"
  op: "ReaderReadV2"
  input: "TFRecordReaderV2"
  input: "input_producer"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/key_image/encoded"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape"
  op: "Reshape"
  input: "ParseSingleExample/key_image/encoded"
  input: "ParseSingleExample/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/key_image/filename"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_1"
  op: "Reshape"
  input: "ParseSingleExample/key_image/filename"
  input: "ParseSingleExample/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/key_image/width"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_2"
  op: "Reshape"
  input: "ParseSingleExample/key_image/width"
  input: "ParseSingleExample/Reshape_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/key_text/length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_3"
  op: "Reshape"
  input: "ParseSingleExample/key_text/length"
  input: "ParseSingleExample/Reshape_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/key_text/string"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_4/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/Reshape_4"
  op: "Reshape"
  input: "ParseSingleExample/key_text/string"
  input: "ParseSingleExample/Reshape_4/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/ParseSingleExample"
  op: "ParseSingleExample"
  input: "ReaderReadV2:1"
  input: "ParseSingleExample/Reshape"
  input: "ParseSingleExample/Reshape_1"
  input: "ParseSingleExample/Reshape_2"
  input: "ParseSingleExample/Reshape_3"
  input: "ParseSingleExample/Reshape_4"
  device: "/device:CPU:0"
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "dense_keys"
    value {
      list {
        s: "image/encoded"
        s: "image/filename"
        s: "image/width"
        s: "text/length"
        s: "text/string"
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "num_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "sparse_keys"
    value {
      list {
        s: "image/labels"
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "DecodeJpeg"
  op: "DecodeJpeg"
  input: "ParseSingleExample/ParseSingleExample:3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 1
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "ParseSingleExample/ParseSingleExample:5"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "SerializeSparse"
  op: "SerializeSparse"
  input: "ParseSingleExample/ParseSingleExample"
  input: "ParseSingleExample/ParseSingleExample:1"
  input: "ParseSingleExample/ParseSingleExample:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "convert_image/Cast"
  op: "Cast"
  input: "DecodeJpeg"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convert_image/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.003921568859368563
      }
    }
  }
}
node {
  name: "convert_image"
  op: "Mul"
  input: "convert_image/Cast"
  input: "convert_image/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sub/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Sub"
  op: "Sub"
  input: "convert_image"
  input: "Sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Slice/begin"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Sub"
  input: "Slice/begin"
  input: "Slice/size"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "Slice"
  input: "Sub"
  input: "concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/LessEqual/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 9
          }
        }
        tensor_content: "\000\000\000\200 \000\000\000@\000\000\000`\000\000\000\200\000\000\000\240\000\000\000\300\000\000\000\340\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/LessEqual"
  op: "LessEqual"
  input: "bucket_by_sequence_length/LessEqual/x"
  input: "Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/Less/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 9
          }
        }
        tensor_content: " \000\000\000@\000\000\000`\000\000\000\200\000\000\000\240\000\000\000\300\000\000\000\340\000\000\000\000\001\000\000\377\377\377\177"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/Less"
  op: "Less"
  input: "Cast"
  input: "bucket_by_sequence_length/Less/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/LogicalAnd"
  op: "LogicalAnd"
  input: "bucket_by_sequence_length/LessEqual"
  input: "bucket_by_sequence_length/Less"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/Where"
  op: "Where"
  input: "bucket_by_sequence_length/LogicalAnd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/Min"
  op: "Min"
  input: "bucket_by_sequence_length/Where"
  input: "bucket_by_sequence_length/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/ToInt32"
  op: "Cast"
  input: "bucket_by_sequence_length/Min"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/batch_size_8"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_0"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_1"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_2"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_3"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_4"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_5"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_6"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_7"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_8"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue"
  op: "PaddingFIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal"
  input: "bucket_by_sequence_length/bucket/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_0"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond/bucket_queue_0_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_1"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_1"
  input: "bucket_by_sequence_length/bucket/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_1/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_1/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_1"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_1/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_1/bucket_queue_1_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_1/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_1/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_1/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_1/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_1/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_1/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_1/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_1/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_2"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_2"
  input: "bucket_by_sequence_length/bucket/Equal_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_2/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_2/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_2"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_2/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_2/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_2/bucket_queue_2_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_2/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_2/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_2/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_2/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_2/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_2/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_2/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_2/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_3"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_3"
  input: "bucket_by_sequence_length/bucket/Equal_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_3/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_3/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_3"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_3/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_3/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_3/bucket_queue_3_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_3/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_3/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_3/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_3/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_3/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_3/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_3/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_3/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_4"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_4"
  input: "bucket_by_sequence_length/bucket/Equal_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_4/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_4/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_4"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_4/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_4/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_4/bucket_queue_4_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_4/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_4/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_4/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_4/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_4/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_4/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_4/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_4/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_5"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_5"
  input: "bucket_by_sequence_length/bucket/Equal_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_5/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_5/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_5"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_5/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_5/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_5/bucket_queue_5_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_5/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_5/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_5/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_5/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_5/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_5/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_5/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_5/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_6"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_6"
  input: "bucket_by_sequence_length/bucket/Equal_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_6/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_6/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_6"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_6/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_6/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_6/bucket_queue_6_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_6/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_6/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_6/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_6/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_6/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_6/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_6/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_6/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_7"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_7"
  input: "bucket_by_sequence_length/bucket/Equal_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_7/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_7/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_7"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_7/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_7/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_7/bucket_queue_7_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_7/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_7/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_7/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_7/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_7/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_7/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_7/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_7/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Equal_8"
  op: "Equal"
  input: "bucket_by_sequence_length/ToInt32"
  input: "bucket_by_sequence_length/bucket/Equal_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/Equal_8"
  input: "bucket_by_sequence_length/bucket/Equal_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/switch_t"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_8/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/switch_f"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_8/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/Equal_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch:1"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_1:1"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_2:1"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_3:1"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_4:1"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_5:1"
  input: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch"
  op: "Switch"
  input: "bucket_by_sequence_length/bucket/bucket_queue_8"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/bucket_queue_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_2"
  op: "Switch"
  input: "concat"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_3"
  op: "Switch"
  input: "SerializeSparse"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@SerializeSparse"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_4"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:6"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_5"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:7"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue/Switch_6"
  op: "Switch"
  input: "ParseSingleExample/ParseSingleExample:4"
  input: "bucket_by_sequence_length/bucket/cond_8/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ParseSingleExample/ParseSingleExample"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/control_dependency"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_8/switch_t"
  input: "^bucket_by_sequence_length/bucket/cond_8/bucket_queue_8_enqueue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_8/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/NoOp"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond_8/switch_f"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/control_dependency_1"
  op: "Identity"
  input: "bucket_by_sequence_length/bucket/cond_8/switch_f"
  input: "^bucket_by_sequence_length/bucket/cond_8/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bucket_by_sequence_length/bucket/cond_8/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/cond_8/Merge"
  op: "Merge"
  input: "bucket_by_sequence_length/bucket/cond_8/control_dependency_1"
  input: "bucket_by_sequence_length/bucket/cond_8/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/group_enqueues"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/cond/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_1/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_2/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_3/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_4/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_5/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_6/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_7/Merge"
  input: "^bucket_by_sequence_length/bucket/cond_8/Merge"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_0/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_0"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_0"
  input: "bucket_by_sequence_length/bucket/read_bucket_0/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_0"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_1"
  input: "bucket_by_sequence_length/bucket/read_bucket_0"
  input: "bucket_by_sequence_length/bucket/read_bucket_0:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_0:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_0:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_0:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_0:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_1/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_1"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_1"
  input: "bucket_by_sequence_length/bucket/read_bucket_1/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_1"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_2"
  input: "bucket_by_sequence_length/bucket/read_bucket_1"
  input: "bucket_by_sequence_length/bucket/read_bucket_1:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_1:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_1:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_1:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_1:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_2/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_2"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_2"
  input: "bucket_by_sequence_length/bucket/read_bucket_2/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_2"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_3"
  input: "bucket_by_sequence_length/bucket/read_bucket_2"
  input: "bucket_by_sequence_length/bucket/read_bucket_2:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_2:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_2:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_2:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_2:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_3/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_3"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_3"
  input: "bucket_by_sequence_length/bucket/read_bucket_3/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_3"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_4"
  input: "bucket_by_sequence_length/bucket/read_bucket_3"
  input: "bucket_by_sequence_length/bucket/read_bucket_3:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_3:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_3:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_3:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_3:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_4/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_4"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_4"
  input: "bucket_by_sequence_length/bucket/read_bucket_4/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_4"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_5"
  input: "bucket_by_sequence_length/bucket/read_bucket_4"
  input: "bucket_by_sequence_length/bucket/read_bucket_4:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_4:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_4:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_4:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_4:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_5/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_5"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_5"
  input: "bucket_by_sequence_length/bucket/read_bucket_5/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_5"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_6"
  input: "bucket_by_sequence_length/bucket/read_bucket_5"
  input: "bucket_by_sequence_length/bucket/read_bucket_5:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_5:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_5:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_5:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_5:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_6/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_6"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_6"
  input: "bucket_by_sequence_length/bucket/read_bucket_6/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_6"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_7"
  input: "bucket_by_sequence_length/bucket/read_bucket_6"
  input: "bucket_by_sequence_length/bucket/read_bucket_6:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_6:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_6:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_6:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_6:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_8"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_7/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_7"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_7"
  input: "bucket_by_sequence_length/bucket/read_bucket_7/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_7"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_8"
  input: "bucket_by_sequence_length/bucket/read_bucket_7"
  input: "bucket_by_sequence_length/bucket/read_bucket_7:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_7:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_7:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_7:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_7:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Const_9"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_8/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/read_bucket_8"
  op: "QueueDequeueManyV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_8"
  input: "bucket_by_sequence_length/bucket/read_bucket_8/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/enqueue_from_bucket_8"
  op: "QueueEnqueueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  input: "bucket_by_sequence_length/bucket/Const_9"
  input: "bucket_by_sequence_length/bucket/read_bucket_8"
  input: "bucket_by_sequence_length/bucket/read_bucket_8:1"
  input: "bucket_by_sequence_length/bucket/read_bucket_8:2"
  input: "bucket_by_sequence_length/bucket/read_bucket_8:3"
  input: "bucket_by_sequence_length/bucket/read_bucket_8:4"
  input: "bucket_by_sequence_length/bucket/read_bucket_8:5"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_0_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_0"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_1_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_1"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_2_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_2"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_3_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_3"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_4_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_4"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_5_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_5"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_6_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_6"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_7_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_7"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_8_Close"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_8"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/group_deps"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_0_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_1_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_2_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_3_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_4_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_5_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_6_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_7_Close"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_8_Close"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_0_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_0"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_1_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_1"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_2_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_2"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_3_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_3"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_4_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_4"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_5_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_5"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_6_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_6"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_7_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_7"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket_queue_8_Close_1"
  op: "QueueCloseV2"
  input: "bucket_by_sequence_length/bucket/bucket_queue_8"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/group_deps_1"
  op: "NoOp"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_0_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_1_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_2_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_3_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_4_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_5_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_6_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_7_Close_1"
  input: "^bucket_by_sequence_length/bucket/bucket_queue_8_Close_1"
  device: "/device:CPU:0"
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_0/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_0/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_0/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_0/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_1"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_1"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_1/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_1/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_1/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_1/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_2"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_2"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_2"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_2/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_2/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_2/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_2/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_3"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_3"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_3"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_3/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_3/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_3/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_3/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_4"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_4"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_4"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_4/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_4/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_4/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_4/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_5"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_5"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_5"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_5/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_5/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_5/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_5/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_6"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_6"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_6"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_6/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_6/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_6/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_6/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_7"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_7"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_7"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_7/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_7/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_7/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_7/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_8"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_8"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_8"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_8/size/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_8/size"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_8/size"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_8/size/tags"
  input: "bucket_by_sequence_length/bucket/Cast_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/top_queue_Size_9"
  op: "QueueSizeV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/Cast_9"
  op: "Cast"
  input: "bucket_by_sequence_length/bucket/top_queue_Size_9"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001953125
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/mul"
  op: "Mul"
  input: "bucket_by_sequence_length/bucket/Cast_9"
  input: "bucket_by_sequence_length/bucket/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/top_queue/fraction_of_512_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/top_queue/fraction_of_512_full"
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/top_queue/fraction_of_512_full"
  op: "ScalarSummary"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/top_queue/fraction_of_512_full/tags"
  input: "bucket_by_sequence_length/bucket/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bucket_by_sequence_length/bucket/dequeue_top"
  op: "QueueDequeueV2"
  input: "bucket_by_sequence_length/bucket/top_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_FLOAT
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "DeserializeManySparse"
  op: "DeserializeManySparse"
  input: "bucket_by_sequence_length/bucket/dequeue_top:3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "DeserializeManySparse:1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/Shape"
  op: "Shape"
  input: "bucket_by_sequence_length/bucket/dequeue_top:2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "convnet/random_normal/mean"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/random_normal/stddev"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "convnet/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/random_normal/mul"
  op: "Mul"
  input: "convnet/random_normal/RandomStandardNormal"
  input: "convnet/random_normal/stddev"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/random_normal"
  op: "Add"
  input: "convnet/random_normal/mul"
  input: "convnet/random_normal/mean"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/truediv/y"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 250.0
      }
    }
  }
}
node {
  name: "convnet/truediv"
  op: "RealDiv"
  input: "convnet/random_normal"
  input: "convnet/truediv/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/add"
  op: "Add"
  input: "bucket_by_sequence_length/bucket/dequeue_top:2"
  input: "convnet/truediv"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform/min"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125490203499794
      }
    }
  }
}
node {
  name: "convnet/random_uniform/max"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125490203499794
      }
    }
  }
}
node {
  name: "convnet/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "convnet/random_uniform/shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/random_uniform/sub"
  op: "Sub"
  input: "convnet/random_uniform/max"
  input: "convnet/random_uniform/min"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform/mul"
  op: "Mul"
  input: "convnet/random_uniform/RandomUniform"
  input: "convnet/random_uniform/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform"
  op: "Add"
  input: "convnet/random_uniform/mul"
  input: "convnet/random_uniform/min"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/adjust_brightness/Identity"
  op: "Identity"
  input: "convnet/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/adjust_brightness"
  op: "Add"
  input: "convnet/adjust_brightness/Identity"
  input: "convnet/random_uniform"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/adjust_brightness/Identity_1"
  op: "Identity"
  input: "convnet/adjust_brightness"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "convnet/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "convnet/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "convnet/random_uniform_1/shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/random_uniform_1/sub"
  op: "Sub"
  input: "convnet/random_uniform_1/max"
  input: "convnet/random_uniform_1/min"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform_1/mul"
  op: "Mul"
  input: "convnet/random_uniform_1/RandomUniform"
  input: "convnet/random_uniform_1/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/random_uniform_1"
  op: "Add"
  input: "convnet/random_uniform_1/mul"
  input: "convnet/random_uniform_1/min"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/adjust_contrast/Identity"
  op: "Identity"
  input: "convnet/adjust_brightness/Identity_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/adjust_contrast"
  op: "AdjustContrastv2"
  input: "convnet/adjust_contrast/Identity"
  input: "convnet/random_uniform_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/adjust_contrast/Identity_1"
  op: "Identity"
  input: "convnet/adjust_contrast"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5374838709831238
      }
    }
  }
}
node {
  name: "convnet/conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv1/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv1/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv1/kernel/Assign"
  op: "Assign"
  input: "convnet/conv1/kernel"
  input: "convnet/conv1/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv1/kernel/read"
  op: "Identity"
  input: "convnet/conv1/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv1/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv1/bias/Assign"
  op: "Assign"
  input: "convnet/conv1/bias"
  input: "convnet/conv1/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv1/bias/read"
  op: "Identity"
  input: "convnet/conv1/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv1/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv1/Conv2D"
  op: "Conv2D"
  input: "convnet/adjust_contrast/Identity_1"
  input: "convnet/conv1/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv1/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv1/Conv2D"
  input: "convnet/conv1/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv1/Relu"
  op: "Relu"
  input: "convnet/conv1/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "convnet/conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv2/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv2/kernel/Assign"
  op: "Assign"
  input: "convnet/conv2/kernel"
  input: "convnet/conv2/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/kernel/read"
  op: "Identity"
  input: "convnet/conv2/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv2/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv2/bias/Assign"
  op: "Assign"
  input: "convnet/conv2/bias"
  input: "convnet/conv2/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/bias/read"
  op: "Identity"
  input: "convnet/conv2/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv2/Conv2D"
  op: "Conv2D"
  input: "convnet/conv1/Relu"
  input: "convnet/conv2/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv2/Conv2D"
  input: "convnet/conv2/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/gamma"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/gamma/Assign"
  op: "Assign"
  input: "convnet/conv2/batch_norm/gamma"
  input: "convnet/conv2/batch_norm/gamma/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/gamma/read"
  op: "Identity"
  input: "convnet/conv2/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/beta"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/beta/Assign"
  op: "Assign"
  input: "convnet/conv2/batch_norm/beta"
  input: "convnet/conv2/batch_norm/beta/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/beta/read"
  op: "Identity"
  input: "convnet/conv2/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "convnet/conv2/batch_norm/moving_mean"
  input: "convnet/conv2/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_mean/read"
  op: "Identity"
  input: "convnet/conv2/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "convnet/conv2/batch_norm/moving_variance"
  input: "convnet/conv2/batch_norm/moving_variance/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/moving_variance/read"
  op: "Identity"
  input: "convnet/conv2/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "convnet/conv2/BiasAdd"
  input: "convnet/conv2/batch_norm/gamma/read"
  input: "convnet/conv2/batch_norm/beta/read"
  input: "convnet/conv2/batch_norm/Const"
  input: "convnet/conv2/batch_norm/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "convnet/conv2/batch_norm/AssignMovingAvg/sub/x"
  input: "convnet/conv2/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "convnet/conv2/batch_norm/moving_mean/read"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "convnet/conv2/batch_norm/AssignMovingAvg/sub_1"
  input: "convnet/conv2/batch_norm/AssignMovingAvg/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "convnet/conv2/batch_norm/moving_mean"
  input: "convnet/conv2/batch_norm/AssignMovingAvg/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1/sub/x"
  input: "convnet/conv2/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "convnet/conv2/batch_norm/moving_variance/read"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1/sub_1"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "convnet/conv2/batch_norm/moving_variance"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv2/relu"
  op: "Relu"
  input: "convnet/conv2/batch_norm/FusedBatchNorm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "convnet/pool2/MaxPool"
  op: "MaxPool"
  input: "convnet/conv2/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "convnet/conv3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "convnet/conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv3/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv3/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv3/kernel/Assign"
  op: "Assign"
  input: "convnet/conv3/kernel"
  input: "convnet/conv3/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv3/kernel/read"
  op: "Identity"
  input: "convnet/conv3/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv3/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv3/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv3/bias/Assign"
  op: "Assign"
  input: "convnet/conv3/bias"
  input: "convnet/conv3/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv3/bias/read"
  op: "Identity"
  input: "convnet/conv3/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv3/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv3/Conv2D"
  op: "Conv2D"
  input: "convnet/pool2/MaxPool"
  input: "convnet/conv3/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv3/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv3/Conv2D"
  input: "convnet/conv3/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv3/Relu"
  op: "Relu"
  input: "convnet/conv3/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv4/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv4/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "convnet/conv4/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv4/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv4/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv4/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv4/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv4/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv4/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv4/kernel/Assign"
  op: "Assign"
  input: "convnet/conv4/kernel"
  input: "convnet/conv4/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/kernel/read"
  op: "Identity"
  input: "convnet/conv4/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv4/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv4/bias/Assign"
  op: "Assign"
  input: "convnet/conv4/bias"
  input: "convnet/conv4/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/bias/read"
  op: "Identity"
  input: "convnet/conv4/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv4/Conv2D"
  op: "Conv2D"
  input: "convnet/conv3/Relu"
  input: "convnet/conv4/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv4/Conv2D"
  input: "convnet/conv4/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/gamma"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/gamma/Assign"
  op: "Assign"
  input: "convnet/conv4/batch_norm/gamma"
  input: "convnet/conv4/batch_norm/gamma/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/gamma/read"
  op: "Identity"
  input: "convnet/conv4/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/beta"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/beta/Assign"
  op: "Assign"
  input: "convnet/conv4/batch_norm/beta"
  input: "convnet/conv4/batch_norm/beta/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/beta/read"
  op: "Identity"
  input: "convnet/conv4/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "convnet/conv4/batch_norm/moving_mean"
  input: "convnet/conv4/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_mean/read"
  op: "Identity"
  input: "convnet/conv4/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "convnet/conv4/batch_norm/moving_variance"
  input: "convnet/conv4/batch_norm/moving_variance/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/moving_variance/read"
  op: "Identity"
  input: "convnet/conv4/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "convnet/conv4/BiasAdd"
  input: "convnet/conv4/batch_norm/gamma/read"
  input: "convnet/conv4/batch_norm/beta/read"
  input: "convnet/conv4/batch_norm/Const"
  input: "convnet/conv4/batch_norm/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "convnet/conv4/batch_norm/AssignMovingAvg/sub/x"
  input: "convnet/conv4/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "convnet/conv4/batch_norm/moving_mean/read"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "convnet/conv4/batch_norm/AssignMovingAvg/sub_1"
  input: "convnet/conv4/batch_norm/AssignMovingAvg/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "convnet/conv4/batch_norm/moving_mean"
  input: "convnet/conv4/batch_norm/AssignMovingAvg/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1/sub/x"
  input: "convnet/conv4/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "convnet/conv4/batch_norm/moving_variance/read"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1/sub_1"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "convnet/conv4/batch_norm/moving_variance"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv4/relu"
  op: "Relu"
  input: "convnet/conv4/batch_norm/FusedBatchNorm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "convnet/pool4/MaxPool"
  op: "MaxPool"
  input: "convnet/conv4/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "convnet/conv5/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv5/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv5/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "convnet/conv5/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv5/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv5/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv5/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv5/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv5/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv5/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv5/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv5/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv5/kernel/Assign"
  op: "Assign"
  input: "convnet/conv5/kernel"
  input: "convnet/conv5/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv5/kernel/read"
  op: "Identity"
  input: "convnet/conv5/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv5/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv5/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv5/bias/Assign"
  op: "Assign"
  input: "convnet/conv5/bias"
  input: "convnet/conv5/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv5/bias/read"
  op: "Identity"
  input: "convnet/conv5/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv5/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv5/Conv2D"
  op: "Conv2D"
  input: "convnet/pool4/MaxPool"
  input: "convnet/conv5/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv5/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv5/Conv2D"
  input: "convnet/conv5/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv5/Relu"
  op: "Relu"
  input: "convnet/conv5/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv6/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv6/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "convnet/conv6/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv6/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv6/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv6/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv6/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv6/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv6/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv6/kernel/Assign"
  op: "Assign"
  input: "convnet/conv6/kernel"
  input: "convnet/conv6/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/kernel/read"
  op: "Identity"
  input: "convnet/conv6/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv6/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv6/bias/Assign"
  op: "Assign"
  input: "convnet/conv6/bias"
  input: "convnet/conv6/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/bias/read"
  op: "Identity"
  input: "convnet/conv6/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv6/Conv2D"
  op: "Conv2D"
  input: "convnet/conv5/Relu"
  input: "convnet/conv6/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv6/Conv2D"
  input: "convnet/conv6/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/gamma"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/gamma/Assign"
  op: "Assign"
  input: "convnet/conv6/batch_norm/gamma"
  input: "convnet/conv6/batch_norm/gamma/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/gamma/read"
  op: "Identity"
  input: "convnet/conv6/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/beta"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/beta/Assign"
  op: "Assign"
  input: "convnet/conv6/batch_norm/beta"
  input: "convnet/conv6/batch_norm/beta/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/beta/read"
  op: "Identity"
  input: "convnet/conv6/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "convnet/conv6/batch_norm/moving_mean"
  input: "convnet/conv6/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_mean/read"
  op: "Identity"
  input: "convnet/conv6/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "convnet/conv6/batch_norm/moving_variance"
  input: "convnet/conv6/batch_norm/moving_variance/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/moving_variance/read"
  op: "Identity"
  input: "convnet/conv6/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "convnet/conv6/BiasAdd"
  input: "convnet/conv6/batch_norm/gamma/read"
  input: "convnet/conv6/batch_norm/beta/read"
  input: "convnet/conv6/batch_norm/Const"
  input: "convnet/conv6/batch_norm/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "convnet/conv6/batch_norm/AssignMovingAvg/sub/x"
  input: "convnet/conv6/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "convnet/conv6/batch_norm/moving_mean/read"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "convnet/conv6/batch_norm/AssignMovingAvg/sub_1"
  input: "convnet/conv6/batch_norm/AssignMovingAvg/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "convnet/conv6/batch_norm/moving_mean"
  input: "convnet/conv6/batch_norm/AssignMovingAvg/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1/sub/x"
  input: "convnet/conv6/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "convnet/conv6/batch_norm/moving_variance/read"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1/sub_1"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "convnet/conv6/batch_norm/moving_variance"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv6/relu"
  op: "Relu"
  input: "convnet/conv6/batch_norm/FusedBatchNorm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "convnet/pool6/MaxPool"
  op: "MaxPool"
  input: "convnet/conv6/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "convnet/conv7/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv7/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv7/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "convnet/conv7/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv7/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv7/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv7/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv7/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv7/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv7/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv7/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv7/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv7/kernel/Assign"
  op: "Assign"
  input: "convnet/conv7/kernel"
  input: "convnet/conv7/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv7/kernel/read"
  op: "Identity"
  input: "convnet/conv7/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv7/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv7/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv7/bias/Assign"
  op: "Assign"
  input: "convnet/conv7/bias"
  input: "convnet/conv7/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv7/bias/read"
  op: "Identity"
  input: "convnet/conv7/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv7/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv7/Conv2D"
  op: "Conv2D"
  input: "convnet/pool6/MaxPool"
  input: "convnet/conv7/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv7/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv7/Conv2D"
  input: "convnet/conv7/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv7/Relu"
  op: "Relu"
  input: "convnet/conv7/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv8/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv8/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "convnet/conv8/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "convnet/conv8/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "convnet/conv8/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "convnet/conv8/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "convnet/conv8/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "convnet/conv8/kernel/Initializer/truncated_normal/mul"
  input: "convnet/conv8/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv8/kernel/Assign"
  op: "Assign"
  input: "convnet/conv8/kernel"
  input: "convnet/conv8/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/kernel/read"
  op: "Identity"
  input: "convnet/conv8/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv8/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv8/bias/Assign"
  op: "Assign"
  input: "convnet/conv8/bias"
  input: "convnet/conv8/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/bias/read"
  op: "Identity"
  input: "convnet/conv8/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/dilation_rate"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "convnet/conv8/Conv2D"
  op: "Conv2D"
  input: "convnet/conv7/Relu"
  input: "convnet/conv8/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/BiasAdd"
  op: "BiasAdd"
  input: "convnet/conv8/Conv2D"
  input: "convnet/conv8/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/gamma"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/gamma/Assign"
  op: "Assign"
  input: "convnet/conv8/batch_norm/gamma"
  input: "convnet/conv8/batch_norm/gamma/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/gamma/read"
  op: "Identity"
  input: "convnet/conv8/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/beta"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/beta/Assign"
  op: "Assign"
  input: "convnet/conv8/batch_norm/beta"
  input: "convnet/conv8/batch_norm/beta/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/beta/read"
  op: "Identity"
  input: "convnet/conv8/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "convnet/conv8/batch_norm/moving_mean"
  input: "convnet/conv8/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_mean/read"
  op: "Identity"
  input: "convnet/conv8/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "convnet/conv8/batch_norm/moving_variance"
  input: "convnet/conv8/batch_norm/moving_variance/Initializer/ones"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/moving_variance/read"
  op: "Identity"
  input: "convnet/conv8/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "convnet/conv8/BiasAdd"
  input: "convnet/conv8/batch_norm/gamma/read"
  input: "convnet/conv8/batch_norm/beta/read"
  input: "convnet/conv8/batch_norm/Const"
  input: "convnet/conv8/batch_norm/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "convnet/conv8/batch_norm/AssignMovingAvg/sub/x"
  input: "convnet/conv8/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "convnet/conv8/batch_norm/moving_mean/read"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "convnet/conv8/batch_norm/AssignMovingAvg/sub_1"
  input: "convnet/conv8/batch_norm/AssignMovingAvg/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "convnet/conv8/batch_norm/moving_mean"
  input: "convnet/conv8/batch_norm/AssignMovingAvg/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1/sub/x"
  input: "convnet/conv8/batch_norm/Const_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "convnet/conv8/batch_norm/moving_variance/read"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1/sub_1"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1/sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "convnet/conv8/batch_norm/moving_variance"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "convnet/conv8/relu"
  op: "Relu"
  input: "convnet/conv8/batch_norm/FusedBatchNorm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "convnet/pool8/MaxPool"
  op: "MaxPool"
  input: "convnet/conv8/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "convnet/features"
  op: "Squeeze"
  input: "convnet/pool8/MaxPool"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "convnet/conv1_trim"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "convnet/one"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "convnet/two"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "convnet/Sub"
  op: "Sub"
  input: "bucket_by_sequence_length/bucket/dequeue_top:1"
  input: "convnet/conv1_trim"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/FloorDiv"
  op: "FloorDiv"
  input: "convnet/Sub"
  input: "convnet/two"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/Sub_1"
  op: "Sub"
  input: "convnet/FloorDiv"
  input: "convnet/one"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/Sub_2"
  op: "Sub"
  input: "convnet/Sub_1"
  input: "convnet/one"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "convnet/seq_len/shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "convnet/seq_len"
  op: "Reshape"
  input: "convnet/Sub_2"
  input: "convnet/seq_len/shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/time_major/perm"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/time_major"
  op: "Transpose"
  input: "convnet/features"
  input: "rnn/time_major/perm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/sequence_length"
  op: "Identity"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_1"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_4"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_5"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/concat_1"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_6"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/Const_7"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Equal"
  op: "Equal"
  input: "rnn/bdrnn1/fw/fw/Shape"
  input: "rnn/bdrnn1/fw/fw/stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/All"
  op: "All"
  input: "rnn/bdrnn1/fw/fw/Equal"
  input: "rnn/bdrnn1/fw/fw/Const"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Assert/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn1/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn1/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Assert/Assert"
  op: "Assert"
  input: "rnn/bdrnn1/fw/fw/All"
  input: "rnn/bdrnn1/fw/fw/Assert/Assert/data_0"
  input: "rnn/bdrnn1/fw/fw/stack"
  input: "rnn/bdrnn1/fw/fw/Assert/Assert/data_2"
  input: "rnn/bdrnn1/fw/fw/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/sequence_length"
  input: "^rnn/bdrnn1/fw/fw/Assert/Assert"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Shape_1"
  op: "Shape"
  input: "rnn/time_major"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn1/fw/fw/Shape_1"
  input: "rnn/bdrnn1/fw/fw/strided_slice/stack"
  input: "rnn/bdrnn1/fw/fw/strided_slice/stack_1"
  input: "rnn/bdrnn1/fw/fw/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn1/fw/fw/Const_1"
  input: "rnn/bdrnn1/fw/fw/Const_2"
  input: "rnn/bdrnn1/fw/fw/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/zeros"
  op: "Fill"
  input: "rnn/bdrnn1/fw/fw/concat"
  input: "rnn/bdrnn1/fw/fw/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Min"
  op: "Min"
  input: "rnn/bdrnn1/fw/fw/CheckSeqLen"
  input: "rnn/bdrnn1/fw/fw/Const_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Max"
  op: "Max"
  input: "rnn/bdrnn1/fw/fw/CheckSeqLen"
  input: "rnn/bdrnn1/fw/fw/Const_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/time"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "rnn/bdrnn1/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn1/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "rnn/bdrnn1/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn1/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "rnn/time_major"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/Shape"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range/start"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/strided_slice"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range/delta"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "rnn/bdrnn1/fw/fw/TensorArray_1"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range"
  input: "rnn/time_major"
  input: "rnn/bdrnn1/fw/fw/TensorArray_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/time_major"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Maximum/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Maximum"
  op: "Maximum"
  input: "rnn/bdrnn1/fw/fw/Maximum/x"
  input: "rnn/bdrnn1/fw/fw/Max"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Minimum"
  op: "Minimum"
  input: "rnn/bdrnn1/fw/fw/strided_slice"
  input: "rnn/bdrnn1/fw/fw/Maximum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/while/iteration_counter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/time"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Enter_2"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArray:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Enter_3"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Enter_4"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/LSTMCellZeroState/zeros_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Merge"
  op: "Merge"
  input: "rnn/bdrnn1/fw/fw/while/Enter"
  input: "rnn/bdrnn1/fw/fw/while/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Merge_1"
  op: "Merge"
  input: "rnn/bdrnn1/fw/fw/while/Enter_1"
  input: "rnn/bdrnn1/fw/fw/while/NextIteration_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Merge_2"
  op: "Merge"
  input: "rnn/bdrnn1/fw/fw/while/Enter_2"
  input: "rnn/bdrnn1/fw/fw/while/NextIteration_2"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Merge_3"
  op: "Merge"
  input: "rnn/bdrnn1/fw/fw/while/Enter_3"
  input: "rnn/bdrnn1/fw/fw/while/NextIteration_3"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Merge_4"
  op: "Merge"
  input: "rnn/bdrnn1/fw/fw/while/Enter_4"
  input: "rnn/bdrnn1/fw/fw/while/NextIteration_4"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Less"
  op: "Less"
  input: "rnn/bdrnn1/fw/fw/while/Merge"
  input: "rnn/bdrnn1/fw/fw/while/Less/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/strided_slice"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Less_1"
  op: "Less"
  input: "rnn/bdrnn1/fw/fw/while/Merge_1"
  input: "rnn/bdrnn1/fw/fw/while/Less_1/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/Minimum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "rnn/bdrnn1/fw/fw/while/Less"
  input: "rnn/bdrnn1/fw/fw/while/Less_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "rnn/bdrnn1/fw/fw/while/LogicalAnd"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Switch"
  op: "Switch"
  input: "rnn/bdrnn1/fw/fw/while/Merge"
  input: "rnn/bdrnn1/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Switch_1"
  op: "Switch"
  input: "rnn/bdrnn1/fw/fw/while/Merge_1"
  input: "rnn/bdrnn1/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Switch_2"
  op: "Switch"
  input: "rnn/bdrnn1/fw/fw/while/Merge_2"
  input: "rnn/bdrnn1/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Switch_3"
  op: "Switch"
  input: "rnn/bdrnn1/fw/fw/while/Merge_3"
  input: "rnn/bdrnn1/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Switch_4"
  op: "Switch"
  input: "rnn/bdrnn1/fw/fw/while/Merge_4"
  input: "rnn/bdrnn1/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Identity"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/while/Switch:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Identity_1"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/while/Switch_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Identity_2"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/while/Switch_2:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Identity_3"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/while/Switch_3:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Identity_4"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/while/Switch_4:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/add/y"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/add"
  op: "Add"
  input: "rnn/bdrnn1/fw/fw/while/Identity"
  input: "rnn/bdrnn1/fw/fw/while/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn1/fw/fw/while/Identity_1"
  input: "rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArray_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn/bdrnn1/fw/fw/while/Identity_1"
  input: "rnn/bdrnn1/fw/fw/while/GreaterEqual/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/CheckSeqLen"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "rnn/bdrnn1/fw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "rnn/bdrnn1/fw/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/bdrnn1/fw/lstm_cell/bias"
  input: "rnn/bdrnn1/fw/lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/bdrnn1/fw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn1/fw/fw/while/TensorArrayReadV3"
  input: "rnn/bdrnn1/fw/fw/while/Identity_4"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/concat"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/lstm_cell/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/Const"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/split"
  op: "Split"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/split/split_dim"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/add/y"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/add"
  op: "Add"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/split:2"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul"
  op: "Mul"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid"
  input: "rnn/bdrnn1/fw/fw/while/Identity_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/split"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/split:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/add_1"
  op: "Add"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/split:3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Select"
  op: "Select"
  input: "rnn/bdrnn1/fw/fw/while/GreaterEqual"
  input: "rnn/bdrnn1/fw/fw/while/Select/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Select_1"
  op: "Select"
  input: "rnn/bdrnn1/fw/fw/while/GreaterEqual"
  input: "rnn/bdrnn1/fw/fw/while/Identity_3"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Select_2"
  op: "Select"
  input: "rnn/bdrnn1/fw/fw/while/GreaterEqual"
  input: "rnn/bdrnn1/fw/fw/while/Identity_4"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "rnn/bdrnn1/fw/fw/while/Identity_1"
  input: "rnn/bdrnn1/fw/fw/while/Select"
  input: "rnn/bdrnn1/fw/fw/while/Identity_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArray"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/add_1/y"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/add_1"
  op: "Add"
  input: "rnn/bdrnn1/fw/fw/while/Identity_1"
  input: "rnn/bdrnn1/fw/fw/while/add_1/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "rnn/bdrnn1/fw/fw/while/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "rnn/bdrnn1/fw/fw/while/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "rnn/bdrnn1/fw/fw/while/Select_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "rnn/bdrnn1/fw/fw/while/Select_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Exit"
  op: "Exit"
  input: "rnn/bdrnn1/fw/fw/while/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Exit_1"
  op: "Exit"
  input: "rnn/bdrnn1/fw/fw/while/Switch_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Exit_2"
  op: "Exit"
  input: "rnn/bdrnn1/fw/fw/while/Switch_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Exit_3"
  op: "Exit"
  input: "rnn/bdrnn1/fw/fw/while/Switch_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/while/Exit_4"
  op: "Exit"
  input: "rnn/bdrnn1/fw/fw/while/Switch_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "rnn/bdrnn1/fw/fw/TensorArray"
  input: "rnn/bdrnn1/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/range/start"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "rnn/bdrnn1/fw/fw/TensorArray"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/range"
  input: "rnn/bdrnn1/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/fw/fw/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "rnn/time_major"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/sequence_length"
  op: "Identity"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_1"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_4"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_5"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/concat_1"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_6"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/Const_7"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Equal"
  op: "Equal"
  input: "rnn/bdrnn1/bw/bw/Shape"
  input: "rnn/bdrnn1/bw/bw/stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/All"
  op: "All"
  input: "rnn/bdrnn1/bw/bw/Equal"
  input: "rnn/bdrnn1/bw/bw/Const"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Assert/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn1/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn1/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Assert/Assert"
  op: "Assert"
  input: "rnn/bdrnn1/bw/bw/All"
  input: "rnn/bdrnn1/bw/bw/Assert/Assert/data_0"
  input: "rnn/bdrnn1/bw/bw/stack"
  input: "rnn/bdrnn1/bw/bw/Assert/Assert/data_2"
  input: "rnn/bdrnn1/bw/bw/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/sequence_length"
  input: "^rnn/bdrnn1/bw/bw/Assert/Assert"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Shape_1"
  op: "Shape"
  input: "rnn/bdrnn1/bw/ReverseSequence"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn1/bw/bw/Shape_1"
  input: "rnn/bdrnn1/bw/bw/strided_slice/stack"
  input: "rnn/bdrnn1/bw/bw/strided_slice/stack_1"
  input: "rnn/bdrnn1/bw/bw/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn1/bw/bw/Const_1"
  input: "rnn/bdrnn1/bw/bw/Const_2"
  input: "rnn/bdrnn1/bw/bw/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/zeros"
  op: "Fill"
  input: "rnn/bdrnn1/bw/bw/concat"
  input: "rnn/bdrnn1/bw/bw/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Min"
  op: "Min"
  input: "rnn/bdrnn1/bw/bw/CheckSeqLen"
  input: "rnn/bdrnn1/bw/bw/Const_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Max"
  op: "Max"
  input: "rnn/bdrnn1/bw/bw/CheckSeqLen"
  input: "rnn/bdrnn1/bw/bw/Const_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/time"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "rnn/bdrnn1/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn1/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "rnn/bdrnn1/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn1/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "rnn/bdrnn1/bw/ReverseSequence"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/Shape"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range/start"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/strided_slice"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range/delta"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "rnn/bdrnn1/bw/bw/TensorArray_1"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range"
  input: "rnn/bdrnn1/bw/ReverseSequence"
  input: "rnn/bdrnn1/bw/bw/TensorArray_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/ReverseSequence"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Maximum/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Maximum"
  op: "Maximum"
  input: "rnn/bdrnn1/bw/bw/Maximum/x"
  input: "rnn/bdrnn1/bw/bw/Max"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Minimum"
  op: "Minimum"
  input: "rnn/bdrnn1/bw/bw/strided_slice"
  input: "rnn/bdrnn1/bw/bw/Maximum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/while/iteration_counter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/time"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Enter_2"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArray:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Enter_3"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Enter_4"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/LSTMCellZeroState/zeros_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Merge"
  op: "Merge"
  input: "rnn/bdrnn1/bw/bw/while/Enter"
  input: "rnn/bdrnn1/bw/bw/while/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Merge_1"
  op: "Merge"
  input: "rnn/bdrnn1/bw/bw/while/Enter_1"
  input: "rnn/bdrnn1/bw/bw/while/NextIteration_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Merge_2"
  op: "Merge"
  input: "rnn/bdrnn1/bw/bw/while/Enter_2"
  input: "rnn/bdrnn1/bw/bw/while/NextIteration_2"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Merge_3"
  op: "Merge"
  input: "rnn/bdrnn1/bw/bw/while/Enter_3"
  input: "rnn/bdrnn1/bw/bw/while/NextIteration_3"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Merge_4"
  op: "Merge"
  input: "rnn/bdrnn1/bw/bw/while/Enter_4"
  input: "rnn/bdrnn1/bw/bw/while/NextIteration_4"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Less"
  op: "Less"
  input: "rnn/bdrnn1/bw/bw/while/Merge"
  input: "rnn/bdrnn1/bw/bw/while/Less/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/strided_slice"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Less_1"
  op: "Less"
  input: "rnn/bdrnn1/bw/bw/while/Merge_1"
  input: "rnn/bdrnn1/bw/bw/while/Less_1/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/Minimum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "rnn/bdrnn1/bw/bw/while/Less"
  input: "rnn/bdrnn1/bw/bw/while/Less_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "rnn/bdrnn1/bw/bw/while/LogicalAnd"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Switch"
  op: "Switch"
  input: "rnn/bdrnn1/bw/bw/while/Merge"
  input: "rnn/bdrnn1/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Switch_1"
  op: "Switch"
  input: "rnn/bdrnn1/bw/bw/while/Merge_1"
  input: "rnn/bdrnn1/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Switch_2"
  op: "Switch"
  input: "rnn/bdrnn1/bw/bw/while/Merge_2"
  input: "rnn/bdrnn1/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Switch_3"
  op: "Switch"
  input: "rnn/bdrnn1/bw/bw/while/Merge_3"
  input: "rnn/bdrnn1/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Switch_4"
  op: "Switch"
  input: "rnn/bdrnn1/bw/bw/while/Merge_4"
  input: "rnn/bdrnn1/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Identity"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/while/Switch:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Identity_1"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/while/Switch_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Identity_2"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/while/Switch_2:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Identity_3"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/while/Switch_3:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Identity_4"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/while/Switch_4:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/add/y"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/add"
  op: "Add"
  input: "rnn/bdrnn1/bw/bw/while/Identity"
  input: "rnn/bdrnn1/bw/bw/while/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn1/bw/bw/while/Identity_1"
  input: "rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArray_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn/bdrnn1/bw/bw/while/Identity_1"
  input: "rnn/bdrnn1/bw/bw/while/GreaterEqual/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/CheckSeqLen"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "rnn/bdrnn1/bw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "rnn/bdrnn1/bw/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/bdrnn1/bw/lstm_cell/bias"
  input: "rnn/bdrnn1/bw/lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/bdrnn1/bw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn1/bw/bw/while/TensorArrayReadV3"
  input: "rnn/bdrnn1/bw/bw/while/Identity_4"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/concat"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/lstm_cell/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/Const"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/split"
  op: "Split"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/split/split_dim"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/add/y"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/add"
  op: "Add"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/split:2"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul"
  op: "Mul"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid"
  input: "rnn/bdrnn1/bw/bw/while/Identity_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/split"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/split:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/add_1"
  op: "Add"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/split:3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Select"
  op: "Select"
  input: "rnn/bdrnn1/bw/bw/while/GreaterEqual"
  input: "rnn/bdrnn1/bw/bw/while/Select/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Select_1"
  op: "Select"
  input: "rnn/bdrnn1/bw/bw/while/GreaterEqual"
  input: "rnn/bdrnn1/bw/bw/while/Identity_3"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Select_2"
  op: "Select"
  input: "rnn/bdrnn1/bw/bw/while/GreaterEqual"
  input: "rnn/bdrnn1/bw/bw/while/Identity_4"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "rnn/bdrnn1/bw/bw/while/Identity_1"
  input: "rnn/bdrnn1/bw/bw/while/Select"
  input: "rnn/bdrnn1/bw/bw/while/Identity_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArray"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/add_1/y"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/add_1"
  op: "Add"
  input: "rnn/bdrnn1/bw/bw/while/Identity_1"
  input: "rnn/bdrnn1/bw/bw/while/add_1/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "rnn/bdrnn1/bw/bw/while/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "rnn/bdrnn1/bw/bw/while/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "rnn/bdrnn1/bw/bw/while/Select_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "rnn/bdrnn1/bw/bw/while/Select_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Exit"
  op: "Exit"
  input: "rnn/bdrnn1/bw/bw/while/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Exit_1"
  op: "Exit"
  input: "rnn/bdrnn1/bw/bw/while/Switch_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Exit_2"
  op: "Exit"
  input: "rnn/bdrnn1/bw/bw/while/Switch_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Exit_3"
  op: "Exit"
  input: "rnn/bdrnn1/bw/bw/while/Switch_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/while/Exit_4"
  op: "Exit"
  input: "rnn/bdrnn1/bw/bw/while/Switch_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "rnn/bdrnn1/bw/bw/TensorArray"
  input: "rnn/bdrnn1/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "rnn/bdrnn1/bw/bw/TensorArrayStack/range/start"
  input: "rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "rnn/bdrnn1/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "rnn/bdrnn1/bw/bw/TensorArray"
  input: "rnn/bdrnn1/bw/bw/TensorArrayStack/range"
  input: "rnn/bdrnn1/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn1/bw/bw/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/ReverseSequence"
  op: "ReverseSequence"
  input: "rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/output_stack/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/output_stack"
  op: "ConcatV2"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "rnn/ReverseSequence"
  input: "rnn/output_stack/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/sequence_length"
  op: "Identity"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_1"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_4"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_5"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/concat_1"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_6"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/Const_7"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Equal"
  op: "Equal"
  input: "rnn/bdrnn2/fw/fw/Shape"
  input: "rnn/bdrnn2/fw/fw/stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/All"
  op: "All"
  input: "rnn/bdrnn2/fw/fw/Equal"
  input: "rnn/bdrnn2/fw/fw/Const"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Assert/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn2/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn2/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Assert/Assert"
  op: "Assert"
  input: "rnn/bdrnn2/fw/fw/All"
  input: "rnn/bdrnn2/fw/fw/Assert/Assert/data_0"
  input: "rnn/bdrnn2/fw/fw/stack"
  input: "rnn/bdrnn2/fw/fw/Assert/Assert/data_2"
  input: "rnn/bdrnn2/fw/fw/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/sequence_length"
  input: "^rnn/bdrnn2/fw/fw/Assert/Assert"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Shape_1"
  op: "Shape"
  input: "rnn/output_stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn2/fw/fw/Shape_1"
  input: "rnn/bdrnn2/fw/fw/strided_slice/stack"
  input: "rnn/bdrnn2/fw/fw/strided_slice/stack_1"
  input: "rnn/bdrnn2/fw/fw/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn2/fw/fw/Const_1"
  input: "rnn/bdrnn2/fw/fw/Const_2"
  input: "rnn/bdrnn2/fw/fw/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/zeros"
  op: "Fill"
  input: "rnn/bdrnn2/fw/fw/concat"
  input: "rnn/bdrnn2/fw/fw/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Min"
  op: "Min"
  input: "rnn/bdrnn2/fw/fw/CheckSeqLen"
  input: "rnn/bdrnn2/fw/fw/Const_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Max"
  op: "Max"
  input: "rnn/bdrnn2/fw/fw/CheckSeqLen"
  input: "rnn/bdrnn2/fw/fw/Const_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/time"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "rnn/bdrnn2/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn2/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "rnn/bdrnn2/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn2/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "rnn/output_stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/Shape"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range/start"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/strided_slice"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range/delta"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "rnn/bdrnn2/fw/fw/TensorArray_1"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range"
  input: "rnn/output_stack"
  input: "rnn/bdrnn2/fw/fw/TensorArray_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/output_stack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Maximum/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Maximum"
  op: "Maximum"
  input: "rnn/bdrnn2/fw/fw/Maximum/x"
  input: "rnn/bdrnn2/fw/fw/Max"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Minimum"
  op: "Minimum"
  input: "rnn/bdrnn2/fw/fw/strided_slice"
  input: "rnn/bdrnn2/fw/fw/Maximum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/while/iteration_counter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/time"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Enter_2"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArray:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Enter_3"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Enter_4"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/LSTMCellZeroState/zeros_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Merge"
  op: "Merge"
  input: "rnn/bdrnn2/fw/fw/while/Enter"
  input: "rnn/bdrnn2/fw/fw/while/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Merge_1"
  op: "Merge"
  input: "rnn/bdrnn2/fw/fw/while/Enter_1"
  input: "rnn/bdrnn2/fw/fw/while/NextIteration_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Merge_2"
  op: "Merge"
  input: "rnn/bdrnn2/fw/fw/while/Enter_2"
  input: "rnn/bdrnn2/fw/fw/while/NextIteration_2"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Merge_3"
  op: "Merge"
  input: "rnn/bdrnn2/fw/fw/while/Enter_3"
  input: "rnn/bdrnn2/fw/fw/while/NextIteration_3"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Merge_4"
  op: "Merge"
  input: "rnn/bdrnn2/fw/fw/while/Enter_4"
  input: "rnn/bdrnn2/fw/fw/while/NextIteration_4"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Less"
  op: "Less"
  input: "rnn/bdrnn2/fw/fw/while/Merge"
  input: "rnn/bdrnn2/fw/fw/while/Less/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/strided_slice"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Less_1"
  op: "Less"
  input: "rnn/bdrnn2/fw/fw/while/Merge_1"
  input: "rnn/bdrnn2/fw/fw/while/Less_1/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/Minimum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "rnn/bdrnn2/fw/fw/while/Less"
  input: "rnn/bdrnn2/fw/fw/while/Less_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "rnn/bdrnn2/fw/fw/while/LogicalAnd"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Switch"
  op: "Switch"
  input: "rnn/bdrnn2/fw/fw/while/Merge"
  input: "rnn/bdrnn2/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Switch_1"
  op: "Switch"
  input: "rnn/bdrnn2/fw/fw/while/Merge_1"
  input: "rnn/bdrnn2/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Switch_2"
  op: "Switch"
  input: "rnn/bdrnn2/fw/fw/while/Merge_2"
  input: "rnn/bdrnn2/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Switch_3"
  op: "Switch"
  input: "rnn/bdrnn2/fw/fw/while/Merge_3"
  input: "rnn/bdrnn2/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Switch_4"
  op: "Switch"
  input: "rnn/bdrnn2/fw/fw/while/Merge_4"
  input: "rnn/bdrnn2/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Identity"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/while/Switch:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Identity_1"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/while/Switch_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Identity_2"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/while/Switch_2:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Identity_3"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/while/Switch_3:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Identity_4"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/while/Switch_4:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/add/y"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/add"
  op: "Add"
  input: "rnn/bdrnn2/fw/fw/while/Identity"
  input: "rnn/bdrnn2/fw/fw/while/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn2/fw/fw/while/Identity_1"
  input: "rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArray_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn/bdrnn2/fw/fw/while/Identity_1"
  input: "rnn/bdrnn2/fw/fw/while/GreaterEqual/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/CheckSeqLen"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "rnn/bdrnn2/fw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "rnn/bdrnn2/fw/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/bdrnn2/fw/lstm_cell/bias"
  input: "rnn/bdrnn2/fw/lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/bdrnn2/fw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn2/fw/fw/while/TensorArrayReadV3"
  input: "rnn/bdrnn2/fw/fw/while/Identity_4"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/concat"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/lstm_cell/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/Const"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/split"
  op: "Split"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/split/split_dim"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/add/y"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/add"
  op: "Add"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/split:2"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul"
  op: "Mul"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid"
  input: "rnn/bdrnn2/fw/fw/while/Identity_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/split"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/split:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/add_1"
  op: "Add"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/split:3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Select"
  op: "Select"
  input: "rnn/bdrnn2/fw/fw/while/GreaterEqual"
  input: "rnn/bdrnn2/fw/fw/while/Select/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Select_1"
  op: "Select"
  input: "rnn/bdrnn2/fw/fw/while/GreaterEqual"
  input: "rnn/bdrnn2/fw/fw/while/Identity_3"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Select_2"
  op: "Select"
  input: "rnn/bdrnn2/fw/fw/while/GreaterEqual"
  input: "rnn/bdrnn2/fw/fw/while/Identity_4"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "rnn/bdrnn2/fw/fw/while/Identity_1"
  input: "rnn/bdrnn2/fw/fw/while/Select"
  input: "rnn/bdrnn2/fw/fw/while/Identity_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArray"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/add_1/y"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/add_1"
  op: "Add"
  input: "rnn/bdrnn2/fw/fw/while/Identity_1"
  input: "rnn/bdrnn2/fw/fw/while/add_1/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "rnn/bdrnn2/fw/fw/while/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "rnn/bdrnn2/fw/fw/while/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "rnn/bdrnn2/fw/fw/while/Select_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "rnn/bdrnn2/fw/fw/while/Select_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Exit"
  op: "Exit"
  input: "rnn/bdrnn2/fw/fw/while/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Exit_1"
  op: "Exit"
  input: "rnn/bdrnn2/fw/fw/while/Switch_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Exit_2"
  op: "Exit"
  input: "rnn/bdrnn2/fw/fw/while/Switch_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Exit_3"
  op: "Exit"
  input: "rnn/bdrnn2/fw/fw/while/Switch_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/while/Exit_4"
  op: "Exit"
  input: "rnn/bdrnn2/fw/fw/while/Switch_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "rnn/bdrnn2/fw/fw/TensorArray"
  input: "rnn/bdrnn2/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/range/start"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "rnn/bdrnn2/fw/fw/TensorArray"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/range"
  input: "rnn/bdrnn2/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/fw/fw/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "rnn/output_stack"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/sequence_length"
  op: "Identity"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_1"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_4"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_5"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/concat_1"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_6"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/Const_7"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Equal"
  op: "Equal"
  input: "rnn/bdrnn2/bw/bw/Shape"
  input: "rnn/bdrnn2/bw/bw/stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/All"
  op: "All"
  input: "rnn/bdrnn2/bw/bw/Equal"
  input: "rnn/bdrnn2/bw/bw/Const"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Assert/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn2/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Assert/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor rnn/bdrnn2/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Assert/Assert/data_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Assert/Assert"
  op: "Assert"
  input: "rnn/bdrnn2/bw/bw/All"
  input: "rnn/bdrnn2/bw/bw/Assert/Assert/data_0"
  input: "rnn/bdrnn2/bw/bw/stack"
  input: "rnn/bdrnn2/bw/bw/Assert/Assert/data_2"
  input: "rnn/bdrnn2/bw/bw/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/sequence_length"
  input: "^rnn/bdrnn2/bw/bw/Assert/Assert"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Shape_1"
  op: "Shape"
  input: "rnn/bdrnn2/bw/ReverseSequence"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn2/bw/bw/Shape_1"
  input: "rnn/bdrnn2/bw/bw/strided_slice/stack"
  input: "rnn/bdrnn2/bw/bw/strided_slice/stack_1"
  input: "rnn/bdrnn2/bw/bw/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn2/bw/bw/Const_1"
  input: "rnn/bdrnn2/bw/bw/Const_2"
  input: "rnn/bdrnn2/bw/bw/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/zeros"
  op: "Fill"
  input: "rnn/bdrnn2/bw/bw/concat"
  input: "rnn/bdrnn2/bw/bw/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Const_3"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Min"
  op: "Min"
  input: "rnn/bdrnn2/bw/bw/CheckSeqLen"
  input: "rnn/bdrnn2/bw/bw/Const_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Const_4"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Max"
  op: "Max"
  input: "rnn/bdrnn2/bw/bw/CheckSeqLen"
  input: "rnn/bdrnn2/bw/bw/Const_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/time"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "rnn/bdrnn2/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn2/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "rnn/bdrnn2/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/bdrnn2/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "rnn/bdrnn2/bw/ReverseSequence"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/Shape"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range/start"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/strided_slice"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range/delta"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "rnn/bdrnn2/bw/bw/TensorArray_1"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range"
  input: "rnn/bdrnn2/bw/ReverseSequence"
  input: "rnn/bdrnn2/bw/bw/TensorArray_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/ReverseSequence"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Maximum/x"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Maximum"
  op: "Maximum"
  input: "rnn/bdrnn2/bw/bw/Maximum/x"
  input: "rnn/bdrnn2/bw/bw/Max"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Minimum"
  op: "Minimum"
  input: "rnn/bdrnn2/bw/bw/strided_slice"
  input: "rnn/bdrnn2/bw/bw/Maximum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/iteration_counter"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/while/iteration_counter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/time"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Enter_2"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArray:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Enter_3"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Enter_4"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/LSTMCellZeroState/zeros_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Merge"
  op: "Merge"
  input: "rnn/bdrnn2/bw/bw/while/Enter"
  input: "rnn/bdrnn2/bw/bw/while/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Merge_1"
  op: "Merge"
  input: "rnn/bdrnn2/bw/bw/while/Enter_1"
  input: "rnn/bdrnn2/bw/bw/while/NextIteration_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Merge_2"
  op: "Merge"
  input: "rnn/bdrnn2/bw/bw/while/Enter_2"
  input: "rnn/bdrnn2/bw/bw/while/NextIteration_2"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Merge_3"
  op: "Merge"
  input: "rnn/bdrnn2/bw/bw/while/Enter_3"
  input: "rnn/bdrnn2/bw/bw/while/NextIteration_3"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Merge_4"
  op: "Merge"
  input: "rnn/bdrnn2/bw/bw/while/Enter_4"
  input: "rnn/bdrnn2/bw/bw/while/NextIteration_4"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Less"
  op: "Less"
  input: "rnn/bdrnn2/bw/bw/while/Merge"
  input: "rnn/bdrnn2/bw/bw/while/Less/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/strided_slice"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Less_1"
  op: "Less"
  input: "rnn/bdrnn2/bw/bw/while/Merge_1"
  input: "rnn/bdrnn2/bw/bw/while/Less_1/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/Minimum"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "rnn/bdrnn2/bw/bw/while/Less"
  input: "rnn/bdrnn2/bw/bw/while/Less_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "rnn/bdrnn2/bw/bw/while/LogicalAnd"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Switch"
  op: "Switch"
  input: "rnn/bdrnn2/bw/bw/while/Merge"
  input: "rnn/bdrnn2/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Switch_1"
  op: "Switch"
  input: "rnn/bdrnn2/bw/bw/while/Merge_1"
  input: "rnn/bdrnn2/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Switch_2"
  op: "Switch"
  input: "rnn/bdrnn2/bw/bw/while/Merge_2"
  input: "rnn/bdrnn2/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Switch_3"
  op: "Switch"
  input: "rnn/bdrnn2/bw/bw/while/Merge_3"
  input: "rnn/bdrnn2/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Switch_4"
  op: "Switch"
  input: "rnn/bdrnn2/bw/bw/while/Merge_4"
  input: "rnn/bdrnn2/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Identity"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/while/Switch:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Identity_1"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/while/Switch_1:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Identity_2"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/while/Switch_2:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Identity_3"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/while/Switch_3:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Identity_4"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/while/Switch_4:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/add/y"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/add"
  op: "Add"
  input: "rnn/bdrnn2/bw/bw/while/Identity"
  input: "rnn/bdrnn2/bw/bw/while/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn2/bw/bw/while/Identity_1"
  input: "rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArray_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn/bdrnn2/bw/bw/while/Identity_1"
  input: "rnn/bdrnn2/bw/bw/while/GreaterEqual/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/CheckSeqLen"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/mul"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "rnn/bdrnn2/bw/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "rnn/bdrnn2/bw/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/bdrnn2/bw/lstm_cell/bias"
  input: "rnn/bdrnn2/bw/lstm_cell/bias/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/bdrnn2/bw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/bdrnn2/bw/bw/while/TensorArrayReadV3"
  input: "rnn/bdrnn2/bw/bw/while/Identity_4"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/concat"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/lstm_cell/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/Const"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/split"
  op: "Split"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/split/split_dim"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/add/y"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/add"
  op: "Add"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/split:2"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul"
  op: "Mul"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid"
  input: "rnn/bdrnn2/bw/bw/while/Identity_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/split"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/split:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/add_1"
  op: "Add"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/split:3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Select"
  op: "Select"
  input: "rnn/bdrnn2/bw/bw/while/GreaterEqual"
  input: "rnn/bdrnn2/bw/bw/while/Select/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Select_1"
  op: "Select"
  input: "rnn/bdrnn2/bw/bw/while/GreaterEqual"
  input: "rnn/bdrnn2/bw/bw/while/Identity_3"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Select_2"
  op: "Select"
  input: "rnn/bdrnn2/bw/bw/while/GreaterEqual"
  input: "rnn/bdrnn2/bw/bw/while/Identity_4"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "rnn/bdrnn2/bw/bw/while/Identity_1"
  input: "rnn/bdrnn2/bw/bw/while/Select"
  input: "rnn/bdrnn2/bw/bw/while/Identity_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArray"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/add_1/y"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/add_1"
  op: "Add"
  input: "rnn/bdrnn2/bw/bw/while/Identity_1"
  input: "rnn/bdrnn2/bw/bw/while/add_1/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "rnn/bdrnn2/bw/bw/while/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "rnn/bdrnn2/bw/bw/while/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "rnn/bdrnn2/bw/bw/while/Select_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "rnn/bdrnn2/bw/bw/while/Select_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Exit"
  op: "Exit"
  input: "rnn/bdrnn2/bw/bw/while/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Exit_1"
  op: "Exit"
  input: "rnn/bdrnn2/bw/bw/while/Switch_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Exit_2"
  op: "Exit"
  input: "rnn/bdrnn2/bw/bw/while/Switch_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Exit_3"
  op: "Exit"
  input: "rnn/bdrnn2/bw/bw/while/Switch_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/while/Exit_4"
  op: "Exit"
  input: "rnn/bdrnn2/bw/bw/while/Switch_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "rnn/bdrnn2/bw/bw/TensorArray"
  input: "rnn/bdrnn2/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "rnn/bdrnn2/bw/bw/TensorArrayStack/range/start"
  input: "rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "rnn/bdrnn2/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "rnn/bdrnn2/bw/bw/TensorArray"
  input: "rnn/bdrnn2/bw/bw/TensorArrayStack/range"
  input: "rnn/bdrnn2/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "rnn/bdrnn2/bw/bw/Const_5"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "rnn/ReverseSequence_1"
  op: "ReverseSequence"
  input: "rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/output_stack_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/output_stack_1"
  op: "ConcatV2"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "rnn/ReverseSequence_1"
  input: "rnn/output_stack_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\232\025\000\000"
      }
    }
  }
}
node {
  name: "rnn/logits/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/logits/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "rnn/logits/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "rnn/logits/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/logits/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "rnn/logits/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "rnn/logits/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "rnn/logits/kernel/Initializer/truncated_normal/mul"
  input: "rnn/logits/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/kernel"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 5530
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/logits/kernel/Assign"
  op: "Assign"
  input: "rnn/logits/kernel"
  input: "rnn/logits/kernel/Initializer/truncated_normal"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/logits/kernel/read"
  op: "Identity"
  input: "rnn/logits/kernel"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5530
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/logits/bias"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5530
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/logits/bias/Assign"
  op: "Assign"
  input: "rnn/logits/bias"
  input: "rnn/logits/bias/Initializer/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/logits/bias/read"
  op: "Identity"
  input: "rnn/logits/bias"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Shape"
  op: "Shape"
  input: "rnn/output_stack_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Rank"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/axes"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/GreaterEqual/y"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn/logits/Tensordot/axes"
  input: "rnn/logits/Tensordot/GreaterEqual/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Cast"
  op: "Cast"
  input: "rnn/logits/Tensordot/GreaterEqual"
  device: "/device:CPU:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/mul"
  op: "Mul"
  input: "rnn/logits/Tensordot/Cast"
  input: "rnn/logits/Tensordot/axes"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Less/y"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Less"
  op: "Less"
  input: "rnn/logits/Tensordot/axes"
  input: "rnn/logits/Tensordot/Less/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Cast_1"
  op: "Cast"
  input: "rnn/logits/Tensordot/Less"
  device: "/device:CPU:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/add"
  op: "Add"
  input: "rnn/logits/Tensordot/axes"
  input: "rnn/logits/Tensordot/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/mul_1"
  op: "Mul"
  input: "rnn/logits/Tensordot/Cast_1"
  input: "rnn/logits/Tensordot/add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/add_1"
  op: "Add"
  input: "rnn/logits/Tensordot/mul"
  input: "rnn/logits/Tensordot/mul_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/range/start"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/range/delta"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/range"
  op: "Range"
  input: "rnn/logits/Tensordot/range/start"
  input: "rnn/logits/Tensordot/Rank"
  input: "rnn/logits/Tensordot/range/delta"
  device: "/device:CPU:1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/ListDiff"
  op: "ListDiff"
  input: "rnn/logits/Tensordot/range"
  input: "rnn/logits/Tensordot/add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/logits/Tensordot/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/GatherV2"
  op: "GatherV2"
  input: "rnn/logits/Tensordot/Shape"
  input: "rnn/logits/Tensordot/ListDiff"
  input: "rnn/logits/Tensordot/GatherV2/axis"
  device: "/device:CPU:1"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/GatherV2_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "rnn/logits/Tensordot/Shape"
  input: "rnn/logits/Tensordot/add_1"
  input: "rnn/logits/Tensordot/GatherV2_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Prod"
  op: "Prod"
  input: "rnn/logits/Tensordot/GatherV2"
  input: "rnn/logits/Tensordot/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Const_1"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Prod_1"
  op: "Prod"
  input: "rnn/logits/Tensordot/GatherV2_1"
  input: "rnn/logits/Tensordot/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/logits/Tensordot/concat/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/concat"
  op: "ConcatV2"
  input: "rnn/logits/Tensordot/GatherV2_1"
  input: "rnn/logits/Tensordot/GatherV2"
  input: "rnn/logits/Tensordot/concat/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/concat_1/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/concat_1"
  op: "ConcatV2"
  input: "rnn/logits/Tensordot/ListDiff"
  input: "rnn/logits/Tensordot/add_1"
  input: "rnn/logits/Tensordot/concat_1/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/stack"
  op: "Pack"
  input: "rnn/logits/Tensordot/Prod"
  input: "rnn/logits/Tensordot/Prod_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/logits/Tensordot/transpose"
  op: "Transpose"
  input: "rnn/output_stack_1"
  input: "rnn/logits/Tensordot/concat_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Reshape"
  op: "Reshape"
  input: "rnn/logits/Tensordot/transpose"
  input: "rnn/logits/Tensordot/stack"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/transpose_1/perm"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/transpose_1"
  op: "Transpose"
  input: "rnn/logits/kernel/read"
  input: "rnn/logits/Tensordot/transpose_1/perm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\232\025\000\000"
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Reshape_1"
  op: "Reshape"
  input: "rnn/logits/Tensordot/transpose_1"
  input: "rnn/logits/Tensordot/Reshape_1/shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/MatMul"
  op: "MatMul"
  input: "rnn/logits/Tensordot/Reshape"
  input: "rnn/logits/Tensordot/Reshape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/logits/Tensordot/Const_2"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5530
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/concat_2/axis"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot/concat_2"
  op: "ConcatV2"
  input: "rnn/logits/Tensordot/GatherV2"
  input: "rnn/logits/Tensordot/Const_2"
  input: "rnn/logits/Tensordot/concat_2/axis"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/Tensordot"
  op: "Reshape"
  input: "rnn/logits/Tensordot/MatMul"
  input: "rnn/logits/Tensordot/concat_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "rnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "rnn/logits/Tensordot"
  input: "rnn/logits/bias/read"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/logits/Relu"
  op: "Relu"
  input: "rnn/logits/BiasAdd"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/CTCLoss"
  op: "CTCLoss"
  input: "rnn/logits/Relu"
  input: "DeserializeManySparse"
  input: "Cast_1"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "ctc_merge_repeated"
    value {
      b: true
    }
  }
  attr {
    key: "ignore_longer_outputs_than_inputs"
    value {
      b: true
    }
  }
  attr {
    key: "preprocess_collapse_repeated"
    value {
      b: false
    }
  }
}
node {
  name: "train/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/Mean"
  op: "Mean"
  input: "train/CTCLoss"
  input: "train/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/learning_rate/learning_rate"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0002673796843737364
      }
    }
  }
}
node {
  name: "train/learning_rate/Cast"
  op: "Cast"
  input: "global_step/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/learning_rate/Cast_1/x"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "train/learning_rate/Cast_2/x"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/learning_rate/truediv"
  op: "RealDiv"
  input: "train/learning_rate/Cast"
  input: "train/learning_rate/Cast_1/x"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/learning_rate/Pow"
  op: "Pow"
  input: "train/learning_rate/Cast_2/x"
  input: "train/learning_rate/truediv"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/learning_rate"
  op: "Mul"
  input: "train/learning_rate/learning_rate"
  input: "train/learning_rate/Pow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/control_dependency"
  op: "Identity"
  input: "train/Mean"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/Mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Shape"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/grad_ys_0"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/Shape"
  input: "train/OptimizeLoss/gradients/grad_ys_0"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/f_count_1"
  input: "train/OptimizeLoss/gradients/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge"
  input: "rnn/bdrnn2/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/y"
  op: "Const"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  input: "^train/OptimizeLoss/gradients/Add/Identity"
  input: "^train/OptimizeLoss/gradients/Add/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add/Identity_2"
  input: "^train/OptimizeLoss/gradients/Add/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add/Identity_4"
  input: "^train/OptimizeLoss/gradients/Add/Identity_5"
  input: "^train/OptimizeLoss/gradients/Add/Identity_6"
  input: "^train/OptimizeLoss/gradients/Add/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_1/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_2/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_3/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_4/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_5/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_6/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add/Identity_7/RefEnter"
  input: "^rnn/bdrnn2/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/Switch:1"
  input: "train/OptimizeLoss/gradients/Add/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Add"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_2"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_1"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/b_count_1"
  input: "train/OptimizeLoss/gradients/NextIteration_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "train/OptimizeLoss/gradients/Merge_1"
  input: "train/OptimizeLoss/gradients/GreaterEqual/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/b_count"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_2"
  op: "LoopCond"
  input: "train/OptimizeLoss/gradients/GreaterEqual"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_1"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_1"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Sub"
  op: "Sub"
  input: "train/OptimizeLoss/gradients/Switch_1:1"
  input: "train/OptimizeLoss/gradients/GreaterEqual/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_1"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_3"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_4"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/f_count_4"
  input: "train/OptimizeLoss/gradients/NextIteration_2"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_2"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_2"
  input: "rnn/bdrnn2/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/y"
  op: "Const"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/Add_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_1/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_2/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_3/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_4/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_5/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_6/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_1/Identity_7/RefEnter"
  input: "^rnn/bdrnn2/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_1"
  op: "Add"
  input: "train/OptimizeLoss/gradients/Switch_2:1"
  input: "train/OptimizeLoss/gradients/Add_1/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_2"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Add_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_5"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_4"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_5"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_5"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_3"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/b_count_5"
  input: "train/OptimizeLoss/gradients/NextIteration_3"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "train/OptimizeLoss/gradients/Merge_3"
  input: "train/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/b_count_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_6"
  op: "LoopCond"
  input: "train/OptimizeLoss/gradients/GreaterEqual_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_3"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_3"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Sub_1"
  op: "Sub"
  input: "train/OptimizeLoss/gradients/Switch_3:1"
  input: "train/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_3"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_7"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_6"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_7"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_4"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/f_count_7"
  input: "train/OptimizeLoss/gradients/NextIteration_4"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_4"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_4"
  input: "rnn/bdrnn1/fw/fw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/y"
  op: "Const"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_2"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_4"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_5"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_6"
  input: "^train/OptimizeLoss/gradients/Add_2/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_1/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_2/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_3/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_4/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_5/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_6/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_2/Identity_7/RefEnter"
  input: "^rnn/bdrnn1/fw/fw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_2"
  op: "Add"
  input: "train/OptimizeLoss/gradients/Switch_4:1"
  input: "train/OptimizeLoss/gradients/Add_2/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_4"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Add_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_8"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_8"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_9"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_8"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_5"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/b_count_9"
  input: "train/OptimizeLoss/gradients/NextIteration_5"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "train/OptimizeLoss/gradients/Merge_5"
  input: "train/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/b_count_8"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_10"
  op: "LoopCond"
  input: "train/OptimizeLoss/gradients/GreaterEqual_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_5"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_5"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Sub_2"
  op: "Sub"
  input: "train/OptimizeLoss/gradients/Switch_5:1"
  input: "train/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_5"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_11"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_5"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_9"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_10"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_9"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_6"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/f_count_10"
  input: "train/OptimizeLoss/gradients/NextIteration_6"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_6"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_6"
  input: "rnn/bdrnn1/bw/bw/while/LoopCond"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/y"
  op: "Const"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_2"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_4"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_5"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_6"
  input: "^train/OptimizeLoss/gradients/Add_3/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_1/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_2/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_3/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_4/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_5/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_6/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/Add_3/Identity_7/RefEnter"
  input: "^rnn/bdrnn1/bw/bw/while/Identity"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Add_3"
  op: "Add"
  input: "train/OptimizeLoss/gradients/Switch_6:1"
  input: "train/OptimizeLoss/gradients/Add_3/y"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_6"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Add_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/f_count_11"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_12"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_13"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/f_count_11"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Merge_7"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/b_count_13"
  input: "train/OptimizeLoss/gradients/NextIteration_7"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "train/OptimizeLoss/gradients/Merge_7"
  input: "train/OptimizeLoss/gradients/GreaterEqual_3/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/b_count_12"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_14"
  op: "LoopCond"
  input: "train/OptimizeLoss/gradients/GreaterEqual_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Switch_7"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/Merge_7"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/Sub_3"
  op: "Sub"
  input: "train/OptimizeLoss/gradients/Switch_7:1"
  input: "train/OptimizeLoss/gradients/GreaterEqual_3/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/NextIteration_7"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/b_count_15"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/Switch_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/Fill"
  input: "train/OptimizeLoss/gradients/train/Mean_grad/Reshape/shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/Mean_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/Mean_grad/Tile"
  op: "Tile"
  input: "train/OptimizeLoss/gradients/train/Mean_grad/Reshape"
  input: "train/OptimizeLoss/gradients/train/Mean_grad/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/Mean_grad/Const_1"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/OptimizeLoss/gradients/train/Mean_grad/Tile"
  input: "train/OptimizeLoss/gradients/train/Mean_grad/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "train/CTCLoss:1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/CTCLoss_grad/PreventGradient"
  op: "PreventGradient"
  input: "train/CTCLoss:1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second  derivative of ctc_loss due to the fused implementation\'s interaction  with tf.gradients()"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/CTCLoss_grad/ExpandDims/dim"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/CTCLoss_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/OptimizeLoss/gradients/train/Mean_grad/truediv"
  input: "train/OptimizeLoss/gradients/train/CTCLoss_grad/ExpandDims/dim"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/train/CTCLoss_grad/mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/train/CTCLoss_grad/ExpandDims"
  input: "train/OptimizeLoss/gradients/train/CTCLoss_grad/PreventGradient"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/train/CTCLoss_grad/mul"
  input: "rnn/logits/Relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/rnn/logits/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/logits/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/logits/Relu_grad/ReluGrad"
  input: "^train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/logits/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot_grad/Shape"
  op: "Shape"
  input: "rnn/logits/Tensordot/MatMul"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot_grad/Reshape"
  input: "rnn/logits/Tensordot/Reshape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn/logits/Tensordot/Reshape"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot_grad/Reshape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul_1"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "rnn/logits/Tensordot/transpose"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\232\025\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_1_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "rnn/logits/Tensordot/concat_1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_grad/Reshape"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_grad/InvertPermutation"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "rnn/logits/Tensordot/transpose_1/perm"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/Reshape_1_grad/Reshape"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_1_grad/InvertPermutation"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Rank"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/mod"
  op: "FloorMod"
  input: "rnn/output_stack_1/axis"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Shape"
  op: "Shape"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ShapeN"
  op: "ShapeN"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "rnn/ReverseSequence_1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/mod"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ShapeN"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ShapeN:1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_grad/transpose"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ShapeN"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice_1"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_grad/transpose"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ConcatOffset:1"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/ShapeN:1"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice_1"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/output_stack_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn2/fw/fw/TensorArray"
  input: "rnn/bdrnn2/fw/fw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "rnn/bdrnn2/fw/fw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn2/fw/fw/TensorArrayStack/range"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/ReverseSequence_1_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_1_grad/tuple/control_dependency_1"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn2/bw/bw/TensorArray"
  input: "rnn/bdrnn2/bw/bw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "rnn/bdrnn2/bw/bw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn2/bw/bw/TensorArrayStack/range"
  input: "train/OptimizeLoss/gradients/rnn/ReverseSequence_1_grad/ReverseSequence"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_1/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_1/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_1"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_1/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_2/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_2/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_2"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_2/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_2/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_3/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_3/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_3"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_3/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_3/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Exit_4_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Exit_4_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArray"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn2/fw/fw/while/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/Enter"
  input: "rnn/bdrnn2/fw/fw/while/GreaterEqual"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArray"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn2/bw/bw/while/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/Enter"
  input: "rnn/bdrnn2/bw/bw/while/GreaterEqual"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_1"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_2"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/AddN_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/Enter"
  input: "rnn/bdrnn2/fw/fw/while/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_3"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/AddN_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_4"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/Enter"
  input: "rnn/bdrnn2/bw/bw/while/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Sum_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_5"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Const"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Sum_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_5"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Const"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "rnn/bdrnn2/fw/fw/while/lstm_cell/concat"
  input: "^train/OptimizeLoss/gradients/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Const"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/mod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "rnn/bdrnn2/bw/bw/while/lstm_cell/concat"
  input: "^train/OptimizeLoss/gradients/Add_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/Sub"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArray_1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_6"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Const"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/mod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArray_1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_7"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn2/fw/fw/TensorArray_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn2/fw/fw/TensorArrayUnstack/range"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn2/bw/bw/TensorArray_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn2/bw/bw/TensorArrayUnstack/range"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_8"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/ReverseSequence_grad/ReverseSequence"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Rank"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/mod"
  op: "FloorMod"
  input: "rnn/output_stack/axis"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Shape"
  op: "Shape"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ShapeN"
  op: "ShapeN"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "rnn/ReverseSequence"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/mod"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ShapeN"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ShapeN:1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/AddN_8"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ShapeN"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice_1"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/AddN_8"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ConcatOffset:1"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/ShapeN:1"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice_1"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/output_stack_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn1/fw/fw/TensorArray"
  input: "rnn/bdrnn1/fw/fw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "rnn/bdrnn1/fw/fw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn1/fw/fw/TensorArrayStack/range"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/OptimizeLoss/gradients/rnn/output_stack_grad/tuple/control_dependency_1"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn1/bw/bw/TensorArray"
  input: "rnn/bdrnn1/bw/bw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "rnn/bdrnn1/bw/bw/while/Exit_2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn1/bw/bw/TensorArrayStack/range"
  input: "train/OptimizeLoss/gradients/rnn/ReverseSequence_grad/ReverseSequence"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_4/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_4/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_4"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_4/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_4/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_5/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_5/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_5"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_5/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_5/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_5"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_6/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_6/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_6"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_6/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_6/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_7/shape_as_tensor"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_7/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_7"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/zeros_7/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/zeros_7/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Exit_4_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/zeros_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Exit_4_grad/b_exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad_1/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  op: "RefEnter"
  input: "convnet/conv2/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  op: "RefEnter"
  input: "convnet/conv6/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  op: "RefEnter"
  input: "convnet/conv8/batch_norm/AssignMovingAvg"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  op: "RefEnter"
  input: "convnet/conv4/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad/b_switch"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/Switch:1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArray"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn1/fw/fw/while/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/Enter"
  input: "rnn/bdrnn1/fw/fw/while/GreaterEqual"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArray"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "rnn/bdrnn1/bw/bw/while/Identity_1"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/Enter"
  input: "rnn/bdrnn1/bw/bw/while/GreaterEqual"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_9"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN_9"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN_9"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_10"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_13"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_14"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_15"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_8"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_9"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_8"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_9"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_10"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_11"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_12"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_13"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_14"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Identity_15"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like"
  op: "Fill"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/shape_as_tensor"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/zeros_like"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_10"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN_10"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/AddN_10"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_11"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/AddN_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_11"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/Enter"
  input: "rnn/bdrnn1/fw/fw/while/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_12"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/AddN_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/AddN_12"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_13"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/Enter"
  input: "rnn/bdrnn1/bw/bw/while/Identity_3"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Sum_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_13"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_14"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Const"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Sum_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Const"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "rnn/bdrnn1/fw/fw/while/lstm_cell/concat"
  input: "^train/OptimizeLoss/gradients/Add_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Const"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/mod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "rnn/bdrnn1/bw/bw/while/lstm_cell/concat"
  input: "^train/OptimizeLoss/gradients/Add_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArray_1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_15"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Const"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Rank"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/mod"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/ConcatOffset"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Shape_1"
  device: "/device:CPU:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_15"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArray_1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_1/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_2/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_3/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_4/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_5"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_5/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_6"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_6/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow/Identity_7"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Merge_2_grad/tuple/group_deps/Identity_7/RefEnter"
  input: "^train/OptimizeLoss/gradients/Sub_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_16"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn1/fw/fw/TensorArray_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn1/fw/fw/TensorArrayUnstack/range"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/OptimizeLoss/gradients/b_count_14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/OptimizeLoss/gradients/AddN_16"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/bdrnn1/bw/bw/TensorArray_1"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/bdrnn1/bw/bw/TensorArrayUnstack/range"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "convnet/seq_len"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 1
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 0
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/AddN_17"
  op: "AddN"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/ReverseSequence_grad/ReverseSequence"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/time_major_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "rnn/time_major/perm"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/rnn/time_major_grad/transpose"
  op: "Transpose"
  input: "train/OptimizeLoss/gradients/AddN_17"
  input: "train/OptimizeLoss/gradients/rnn/time_major_grad/InvertPermutation"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/features_grad/Shape"
  op: "Shape"
  input: "convnet/pool8/MaxPool"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/features_grad/Reshape"
  op: "Reshape"
  input: "train/OptimizeLoss/gradients/rnn/time_major_grad/transpose"
  input: "train/OptimizeLoss/gradients/convnet/features_grad/Shape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/pool8/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "convnet/conv8/relu"
  input: "convnet/pool8/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/features_grad/Reshape"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/pool8/MaxPool_grad/MaxPoolGrad"
  input: "convnet/conv8/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:4"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv8/relu_grad/ReluGrad"
  input: "convnet/conv8/BiasAdd"
  input: "convnet/conv8/batch_norm/gamma/read"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:3"
  input: "convnet/conv8/batch_norm/FusedBatchNorm:4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/conv7/Relu"
  input: "convnet/conv8/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/ShapeN"
  input: "convnet/conv8/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/conv7/Relu"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/control_dependency"
  input: "convnet/conv7/Relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Relu_grad/ReluGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv7/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/pool6/MaxPool"
  input: "convnet/conv7/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/ShapeN"
  input: "convnet/conv7/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/pool6/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/pool6/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "convnet/conv6/relu"
  input: "convnet/pool6/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/pool6/MaxPool_grad/MaxPoolGrad"
  input: "convnet/conv6/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:4"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv6/relu_grad/ReluGrad"
  input: "convnet/conv6/BiasAdd"
  input: "convnet/conv6/batch_norm/gamma/read"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:3"
  input: "convnet/conv6/batch_norm/FusedBatchNorm:4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/conv5/Relu"
  input: "convnet/conv6/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/ShapeN"
  input: "convnet/conv6/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/conv5/Relu"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/control_dependency"
  input: "convnet/conv5/Relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Relu_grad/ReluGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv5/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/pool4/MaxPool"
  input: "convnet/conv5/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/ShapeN"
  input: "convnet/conv5/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/pool4/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/pool4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "convnet/conv4/relu"
  input: "convnet/pool4/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/pool4/MaxPool_grad/MaxPoolGrad"
  input: "convnet/conv4/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:4"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv4/relu_grad/ReluGrad"
  input: "convnet/conv4/BiasAdd"
  input: "convnet/conv4/batch_norm/gamma/read"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:3"
  input: "convnet/conv4/batch_norm/FusedBatchNorm:4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/conv3/Relu"
  input: "convnet/conv4/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/ShapeN"
  input: "convnet/conv4/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/conv3/Relu"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/control_dependency"
  input: "convnet/conv3/Relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Relu_grad/ReluGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/pool2/MaxPool"
  input: "convnet/conv3/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/ShapeN"
  input: "convnet/conv3/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/pool2/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/pool2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "convnet/conv2/relu"
  input: "convnet/pool2/MaxPool"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/pool2/MaxPool_grad/MaxPoolGrad"
  input: "convnet/conv2/relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:1"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:2"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:3"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:4"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv2/relu_grad/ReluGrad"
  input: "convnet/conv2/BiasAdd"
  input: "convnet/conv2/batch_norm/gamma/read"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:3"
  input: "convnet/conv2/batch_norm/FusedBatchNorm:4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/conv1/Relu"
  input: "convnet/conv2/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/ShapeN"
  input: "convnet/conv2/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/conv1/Relu"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/control_dependency"
  input: "convnet/conv1/Relu"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/Relu_grad/ReluGrad"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Relu_grad/ReluGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "convnet/adjust_contrast/Identity_1"
  input: "convnet/conv1/kernel/read"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/ShapeN"
  input: "convnet/conv1/kernel/read"
  input: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "convnet/adjust_contrast/Identity_1"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Const"
  input: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/group_deps"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_14"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_15"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_16"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_17"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_18"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_19"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_20"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_21"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_22"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_23"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_24"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_25"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_26"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_27"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_28"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_29"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_30"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_31"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_32"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_1_grad/transpose"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_1_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/L2Loss_33"
  op: "L2Loss"
  input: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/stack"
  op: "Pack"
  input: "train/OptimizeLoss/global_norm/L2Loss"
  input: "train/OptimizeLoss/global_norm/L2Loss_1"
  input: "train/OptimizeLoss/global_norm/L2Loss_2"
  input: "train/OptimizeLoss/global_norm/L2Loss_3"
  input: "train/OptimizeLoss/global_norm/L2Loss_4"
  input: "train/OptimizeLoss/global_norm/L2Loss_5"
  input: "train/OptimizeLoss/global_norm/L2Loss_6"
  input: "train/OptimizeLoss/global_norm/L2Loss_7"
  input: "train/OptimizeLoss/global_norm/L2Loss_8"
  input: "train/OptimizeLoss/global_norm/L2Loss_9"
  input: "train/OptimizeLoss/global_norm/L2Loss_10"
  input: "train/OptimizeLoss/global_norm/L2Loss_11"
  input: "train/OptimizeLoss/global_norm/L2Loss_12"
  input: "train/OptimizeLoss/global_norm/L2Loss_13"
  input: "train/OptimizeLoss/global_norm/L2Loss_14"
  input: "train/OptimizeLoss/global_norm/L2Loss_15"
  input: "train/OptimizeLoss/global_norm/L2Loss_16"
  input: "train/OptimizeLoss/global_norm/L2Loss_17"
  input: "train/OptimizeLoss/global_norm/L2Loss_18"
  input: "train/OptimizeLoss/global_norm/L2Loss_19"
  input: "train/OptimizeLoss/global_norm/L2Loss_20"
  input: "train/OptimizeLoss/global_norm/L2Loss_21"
  input: "train/OptimizeLoss/global_norm/L2Loss_22"
  input: "train/OptimizeLoss/global_norm/L2Loss_23"
  input: "train/OptimizeLoss/global_norm/L2Loss_24"
  input: "train/OptimizeLoss/global_norm/L2Loss_25"
  input: "train/OptimizeLoss/global_norm/L2Loss_26"
  input: "train/OptimizeLoss/global_norm/L2Loss_27"
  input: "train/OptimizeLoss/global_norm/L2Loss_28"
  input: "train/OptimizeLoss/global_norm/L2Loss_29"
  input: "train/OptimizeLoss/global_norm/L2Loss_30"
  input: "train/OptimizeLoss/global_norm/L2Loss_31"
  input: "train/OptimizeLoss/global_norm/L2Loss_32"
  input: "train/OptimizeLoss/global_norm/L2Loss_33"
  device: "/device:CPU:1"
  attr {
    key: "N"
    value {
      i: 34
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 34
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/Const"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/Sum"
  op: "Sum"
  input: "train/OptimizeLoss/global_norm/stack"
  input: "train/OptimizeLoss/global_norm/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/Const_1"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/mul"
  op: "Mul"
  input: "train/OptimizeLoss/global_norm/Sum"
  input: "train/OptimizeLoss/global_norm/Const_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/global_norm"
  op: "Sqrt"
  input: "train/OptimizeLoss/global_norm/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/gradient_norm/tags"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/OptimizeLoss/global_norm/gradient_norm"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/global_norm/gradient_norm"
  op: "ScalarSummary"
  input: "train/OptimizeLoss/global_norm/gradient_norm/tags"
  input: "train/OptimizeLoss/global_norm/global_norm"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/loss/tags"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/OptimizeLoss/loss"
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/loss"
  op: "ScalarSummary"
  input: "train/OptimizeLoss/loss/tags"
  input: "train/OptimizeLoss/control_dependency"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/beta1_power"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "train/OptimizeLoss/beta1_power"
  input: "train/OptimizeLoss/beta1_power/initial_value"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "train/OptimizeLoss/beta1_power"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/beta2_power"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "train/OptimizeLoss/beta2_power"
  input: "train/OptimizeLoss/beta2_power/initial_value"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "train/OptimizeLoss/beta2_power"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/bias/Adam"
  input: "OptimizeLoss/convnet/conv1/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv1/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv1/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/bias/Adam"
  input: "OptimizeLoss/convnet/conv2/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/bias/Adam"
  input: "OptimizeLoss/convnet/conv3/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv3/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv3/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/bias/Adam"
  input: "OptimizeLoss/convnet/conv4/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/bias/Adam"
  input: "OptimizeLoss/convnet/conv5/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv5/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv5/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/bias/Adam"
  input: "OptimizeLoss/convnet/conv6/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/bias/Adam"
  input: "OptimizeLoss/convnet/conv7/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv7/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv7/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/bias/Adam"
  input: "OptimizeLoss/convnet/conv8/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\232\025\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/logits/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/logits/kernel/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 5530
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/kernel/Adam"
  input: "OptimizeLoss/rnn/logits/kernel/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/logits/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\232\025\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 5530
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5530
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/logits/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/logits/bias/Adam/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5530
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/bias/Adam"
  input: "OptimizeLoss/rnn/logits/bias/Adam/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/logits/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5530
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5530
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1/Initializer/zeros"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/logits/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train/beta1"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train/beta2"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train/epsilon"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv1/kernel"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv1/bias"
  input: "OptimizeLoss/convnet/conv1/bias/Adam"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv2/kernel"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv2/bias"
  input: "OptimizeLoss/convnet/conv2/bias/Adam"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv2/batch_norm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv2/batch_norm/gamma"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv2/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv2/batch_norm/beta"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv2/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv3/kernel"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv3/bias"
  input: "OptimizeLoss/convnet/conv3/bias/Adam"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv4/kernel"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv4/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv4/bias"
  input: "OptimizeLoss/convnet/conv4/bias/Adam"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv4/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv4/batch_norm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv4/batch_norm/gamma"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv4/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv4/batch_norm/beta"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv4/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv5/kernel"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv5/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv5/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv5/bias"
  input: "OptimizeLoss/convnet/conv5/bias/Adam"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv5/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv6/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv6/kernel"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv6/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv6/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv6/bias"
  input: "OptimizeLoss/convnet/conv6/bias/Adam"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv6/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv6/batch_norm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv6/batch_norm/gamma"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv6/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv6/batch_norm/beta"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv6/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv7/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv7/kernel"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv7/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv7/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv7/bias"
  input: "OptimizeLoss/convnet/conv7/bias/Adam"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv7/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv8/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv8/kernel"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv8/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv8/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv8/bias"
  input: "OptimizeLoss/convnet/conv8/bias/Adam"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv8/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv8/batch_norm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv8/batch_norm/gamma"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_convnet/conv8/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "convnet/conv8/batch_norm/beta"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/convnet/conv8/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn1/fw/lstm_cell/bias"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn1/bw/lstm_cell/bias"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn1/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn2/fw/lstm_cell/bias"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/fw/fw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/bdrnn2/bw/lstm_cell/bias"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/bdrnn2/bw/bw/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/logits/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/logits/kernel"
  input: "OptimizeLoss/rnn/logits/kernel/Adam"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/logits/Tensordot/transpose_1_grad/transpose"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update_rnn/logits/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/logits/bias"
  input: "OptimizeLoss/rnn/logits/bias/Adam"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/learning_rate"
  input: "train/OptimizeLoss/train/beta1"
  input: "train/OptimizeLoss/train/beta2"
  input: "train/OptimizeLoss/train/epsilon"
  input: "train/OptimizeLoss/gradients/rnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/train/mul"
  op: "Mul"
  input: "train/OptimizeLoss/beta1_power/read"
  input: "train/OptimizeLoss/train/beta1"
  input: "^train/OptimizeLoss/train/update_convnet/conv1/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv1/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv3/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv3/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv5/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv5/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv7/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv7/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/logits/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/logits/kernel/ApplyAdam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train/Assign"
  op: "Assign"
  input: "train/OptimizeLoss/beta1_power"
  input: "train/OptimizeLoss/train/mul"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "train/OptimizeLoss/beta2_power/read"
  input: "train/OptimizeLoss/train/beta2"
  input: "^train/OptimizeLoss/train/update_convnet/conv1/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv1/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv3/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv3/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv5/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv5/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv7/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv7/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/logits/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/logits/kernel/ApplyAdam"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "train/OptimizeLoss/beta2_power"
  input: "train/OptimizeLoss/train/mul_1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/OptimizeLoss/train/update"
  op: "NoOp"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/train/Assign"
  input: "^train/OptimizeLoss/train/Assign_1"
  input: "^train/OptimizeLoss/train/update_convnet/conv1/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv1/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv2/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv3/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv3/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv4/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv5/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv5/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv6/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv7/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv7/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/batch_norm/beta/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/batch_norm/gamma/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_convnet/conv8/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/bw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn1/fw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/bw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/bdrnn2/fw/lstm_cell/kernel/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/logits/bias/ApplyAdam"
  input: "^train/OptimizeLoss/train/update_rnn/logits/kernel/ApplyAdam"
  device: "/device:CPU:1"
}
node {
  name: "train/OptimizeLoss/train/value"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  input: "^train/OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train/OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/OptimizeLoss/control_dependency_1"
  op: "Identity"
  input: "train/OptimizeLoss/control_dependency"
  input: "^train/OptimizeLoss/train"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/Mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/learning_rate_1/tags"
  op: "Const"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg"
  input: "^convnet/conv2/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg"
  input: "^convnet/conv4/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg"
  input: "^convnet/conv6/batch_norm/AssignMovingAvg_1"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg"
  input: "^convnet/conv8/batch_norm/AssignMovingAvg_1"
  device: "/device:CPU:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train/learning_rate_1"
      }
    }
  }
}
node {
  name: "train/learning_rate_1"
  op: "ScalarSummary"
  input: "train/learning_rate_1/tags"
  input: "train/learning_rate"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/fraction_of_512_full"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_0/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_1/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_2/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_3/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_4/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_5/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_6/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_7/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/bucket_queue_8/size"
  input: "bucket_by_sequence_length/bucket/bucket/bucket_by_sequence_length/bucket/top_queue/fraction_of_512_full"
  input: "train/OptimizeLoss/global_norm/gradient_norm"
  input: "train/OptimizeLoss/loss"
  input: "train/learning_rate_1"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^OptimizeLoss/convnet/conv1/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv1/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv1/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv1/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv2/batch_norm/beta/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv2/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv2/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv2/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv2/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv3/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv3/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv3/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv3/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv4/batch_norm/beta/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv4/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv4/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv4/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv4/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv5/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv5/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv5/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv5/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv6/batch_norm/beta/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv6/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv6/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv6/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv6/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv7/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv7/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv7/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv7/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv8/batch_norm/beta/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv8/bias/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv8/bias/Adam_1/Assign"
  input: "^OptimizeLoss/convnet/conv8/kernel/Adam/Assign"
  input: "^OptimizeLoss/convnet/conv8/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/logits/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/logits/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/logits/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/logits/kernel/Adam_1/Assign"
  input: "^convnet/conv1/bias/Assign"
  input: "^convnet/conv1/kernel/Assign"
  input: "^convnet/conv2/batch_norm/beta/Assign"
  input: "^convnet/conv2/batch_norm/gamma/Assign"
  input: "^convnet/conv2/batch_norm/moving_mean/Assign"
  input: "^convnet/conv2/batch_norm/moving_variance/Assign"
  input: "^convnet/conv2/bias/Assign"
  input: "^convnet/conv2/kernel/Assign"
  input: "^convnet/conv3/bias/Assign"
  input: "^convnet/conv3/kernel/Assign"
  input: "^convnet/conv4/batch_norm/beta/Assign"
  input: "^convnet/conv4/batch_norm/gamma/Assign"
  input: "^convnet/conv4/batch_norm/moving_mean/Assign"
  input: "^convnet/conv4/batch_norm/moving_variance/Assign"
  input: "^convnet/conv4/bias/Assign"
  input: "^convnet/conv4/kernel/Assign"
  input: "^convnet/conv5/bias/Assign"
  input: "^convnet/conv5/kernel/Assign"
  input: "^convnet/conv6/batch_norm/beta/Assign"
  input: "^convnet/conv6/batch_norm/gamma/Assign"
  input: "^convnet/conv6/batch_norm/moving_mean/Assign"
  input: "^convnet/conv6/batch_norm/moving_variance/Assign"
  input: "^convnet/conv6/bias/Assign"
  input: "^convnet/conv6/kernel/Assign"
  input: "^convnet/conv7/bias/Assign"
  input: "^convnet/conv7/kernel/Assign"
  input: "^convnet/conv8/batch_norm/beta/Assign"
  input: "^convnet/conv8/batch_norm/gamma/Assign"
  input: "^convnet/conv8/batch_norm/moving_mean/Assign"
  input: "^convnet/conv8/batch_norm/moving_variance/Assign"
  input: "^convnet/conv8/bias/Assign"
  input: "^convnet/conv8/kernel/Assign"
  input: "^rnn/bdrnn1/bw/lstm_cell/bias/Assign"
  input: "^rnn/bdrnn1/bw/lstm_cell/kernel/Assign"
  input: "^rnn/bdrnn1/fw/lstm_cell/bias/Assign"
  input: "^rnn/bdrnn1/fw/lstm_cell/kernel/Assign"
  input: "^rnn/bdrnn2/bw/lstm_cell/bias/Assign"
  input: "^rnn/bdrnn2/bw/lstm_cell/kernel/Assign"
  input: "^rnn/bdrnn2/fw/lstm_cell/bias/Assign"
  input: "^rnn/bdrnn2/fw/lstm_cell/kernel/Assign"
  input: "^rnn/logits/bias/Assign"
  input: "^rnn/logits/kernel/Assign"
  input: "^train/OptimizeLoss/beta1_power/Assign"
  input: "^train/OptimizeLoss/beta2_power/Assign"
  device: "/device:CPU:1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "convnet/conv1/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "convnet/conv1/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "convnet/conv2/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "convnet/conv2/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "convnet/conv2/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "convnet/conv2/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "convnet/conv2/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "convnet/conv2/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "convnet/conv3/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "convnet/conv3/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "convnet/conv4/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "convnet/conv4/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "convnet/conv4/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "convnet/conv4/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "convnet/conv4/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "convnet/conv4/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "convnet/conv5/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "convnet/conv5/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "convnet/conv6/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "convnet/conv6/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "convnet/conv6/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "convnet/conv6/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "convnet/conv6/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "convnet/conv6/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "convnet/conv7/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "convnet/conv7/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "convnet/conv8/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "convnet/conv8/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "convnet/conv8/batch_norm/gamma"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "convnet/conv8/batch_norm/beta"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "convnet/conv8/batch_norm/moving_mean"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "convnet/conv8/batch_norm/moving_variance"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn1/fw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn1/bw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn2/fw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "rnn/bdrnn2/bw/lstm_cell/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "rnn/logits/kernel"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "rnn/logits/bias"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "train/OptimizeLoss/beta1_power"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "train/OptimizeLoss/beta2_power"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv1/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv3/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv5/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv7/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/logits/kernel/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/logits/bias/Adam"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1"
  device: "/device:CPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 113
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 113
          }
        }
        string_val: "global_step"
        string_val: "convnet/conv1/kernel"
        string_val: "convnet/conv1/bias"
        string_val: "convnet/conv2/kernel"
        string_val: "convnet/conv2/bias"
        string_val: "convnet/conv2/batch_norm/gamma"
        string_val: "convnet/conv2/batch_norm/beta"
        string_val: "convnet/conv2/batch_norm/moving_mean"
        string_val: "convnet/conv2/batch_norm/moving_variance"
        string_val: "convnet/conv3/kernel"
        string_val: "convnet/conv3/bias"
        string_val: "convnet/conv4/kernel"
        string_val: "convnet/conv4/bias"
        string_val: "convnet/conv4/batch_norm/gamma"
        string_val: "convnet/conv4/batch_norm/beta"
        string_val: "convnet/conv4/batch_norm/moving_mean"
        string_val: "convnet/conv4/batch_norm/moving_variance"
        string_val: "convnet/conv5/kernel"
        string_val: "convnet/conv5/bias"
        string_val: "convnet/conv6/kernel"
        string_val: "convnet/conv6/bias"
        string_val: "convnet/conv6/batch_norm/gamma"
        string_val: "convnet/conv6/batch_norm/beta"
        string_val: "convnet/conv6/batch_norm/moving_mean"
        string_val: "convnet/conv6/batch_norm/moving_variance"
        string_val: "convnet/conv7/kernel"
        string_val: "convnet/conv7/bias"
        string_val: "convnet/conv8/kernel"
        string_val: "convnet/conv8/bias"
        string_val: "convnet/conv8/batch_norm/gamma"
        string_val: "convnet/conv8/batch_norm/beta"
        string_val: "convnet/conv8/batch_norm/moving_mean"
        string_val: "convnet/conv8/batch_norm/moving_variance"
        string_val: "rnn/bdrnn1/fw/lstm_cell/kernel"
        string_val: "rnn/bdrnn1/fw/lstm_cell/bias"
        string_val: "rnn/bdrnn1/bw/lstm_cell/kernel"
        string_val: "rnn/bdrnn1/bw/lstm_cell/bias"
        string_val: "rnn/bdrnn2/fw/lstm_cell/kernel"
        string_val: "rnn/bdrnn2/fw/lstm_cell/bias"
        string_val: "rnn/bdrnn2/bw/lstm_cell/kernel"
        string_val: "rnn/bdrnn2/bw/lstm_cell/bias"
        string_val: "rnn/logits/kernel"
        string_val: "rnn/logits/bias"
        string_val: "train/OptimizeLoss/beta1_power"
        string_val: "train/OptimizeLoss/beta2_power"
        string_val: "OptimizeLoss/convnet/conv1/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv1/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv1/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv2/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv3/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv3/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv3/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv4/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv5/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv5/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv5/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv6/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv7/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv7/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv7/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv8/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/logits/kernel/Adam"
        string_val: "OptimizeLoss/rnn/logits/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/logits/bias/Adam"
        string_val: "OptimizeLoss/rnn/logits/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 113
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 113
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 113
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 113
          }
        }
        string_val: "OptimizeLoss/convnet/conv1/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv1/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv1/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv2/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv3/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv3/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv3/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv4/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv5/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv5/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv5/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv6/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv7/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv7/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv7/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv8/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/logits/bias/Adam"
        string_val: "OptimizeLoss/rnn/logits/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/logits/kernel/Adam"
        string_val: "OptimizeLoss/rnn/logits/kernel/Adam_1"
        string_val: "convnet/conv1/bias"
        string_val: "convnet/conv1/kernel"
        string_val: "convnet/conv2/batch_norm/beta"
        string_val: "convnet/conv2/batch_norm/gamma"
        string_val: "convnet/conv2/batch_norm/moving_mean"
        string_val: "convnet/conv2/batch_norm/moving_variance"
        string_val: "convnet/conv2/bias"
        string_val: "convnet/conv2/kernel"
        string_val: "convnet/conv3/bias"
        string_val: "convnet/conv3/kernel"
        string_val: "convnet/conv4/batch_norm/beta"
        string_val: "convnet/conv4/batch_norm/gamma"
        string_val: "convnet/conv4/batch_norm/moving_mean"
        string_val: "convnet/conv4/batch_norm/moving_variance"
        string_val: "convnet/conv4/bias"
        string_val: "convnet/conv4/kernel"
        string_val: "convnet/conv5/bias"
        string_val: "convnet/conv5/kernel"
        string_val: "convnet/conv6/batch_norm/beta"
        string_val: "convnet/conv6/batch_norm/gamma"
        string_val: "convnet/conv6/batch_norm/moving_mean"
        string_val: "convnet/conv6/batch_norm/moving_variance"
        string_val: "convnet/conv6/bias"
        string_val: "convnet/conv6/kernel"
        string_val: "convnet/conv7/bias"
        string_val: "convnet/conv7/kernel"
        string_val: "convnet/conv8/batch_norm/beta"
        string_val: "convnet/conv8/batch_norm/gamma"
        string_val: "convnet/conv8/batch_norm/moving_mean"
        string_val: "convnet/conv8/batch_norm/moving_variance"
        string_val: "convnet/conv8/bias"
        string_val: "convnet/conv8/kernel"
        string_val: "global_step"
        string_val: "rnn/bdrnn1/bw/lstm_cell/bias"
        string_val: "rnn/bdrnn1/bw/lstm_cell/kernel"
        string_val: "rnn/bdrnn1/fw/lstm_cell/bias"
        string_val: "rnn/bdrnn1/fw/lstm_cell/kernel"
        string_val: "rnn/bdrnn2/bw/lstm_cell/bias"
        string_val: "rnn/bdrnn2/bw/lstm_cell/kernel"
        string_val: "rnn/bdrnn2/fw/lstm_cell/bias"
        string_val: "rnn/bdrnn2/fw/lstm_cell/kernel"
        string_val: "rnn/logits/bias"
        string_val: "rnn/logits/kernel"
        string_val: "train/OptimizeLoss/beta1_power"
        string_val: "train/OptimizeLoss/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 113
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "OptimizeLoss/convnet/conv1/bias/Adam"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv2/bias/Adam"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv3/bias/Adam"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv4/bias/Adam"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv5/bias/Adam"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv6/bias/Adam"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv7/bias/Adam"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  input: "OptimizeLoss/convnet/conv8/bias/Adam"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/logits/bias/Adam"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1"
  input: "OptimizeLoss/rnn/logits/kernel/Adam"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  input: "convnet/conv1/bias"
  input: "convnet/conv1/kernel"
  input: "convnet/conv2/batch_norm/beta"
  input: "convnet/conv2/batch_norm/gamma"
  input: "convnet/conv2/batch_norm/moving_mean"
  input: "convnet/conv2/batch_norm/moving_variance"
  input: "convnet/conv2/bias"
  input: "convnet/conv2/kernel"
  input: "convnet/conv3/bias"
  input: "convnet/conv3/kernel"
  input: "convnet/conv4/batch_norm/beta"
  input: "convnet/conv4/batch_norm/gamma"
  input: "convnet/conv4/batch_norm/moving_mean"
  input: "convnet/conv4/batch_norm/moving_variance"
  input: "convnet/conv4/bias"
  input: "convnet/conv4/kernel"
  input: "convnet/conv5/bias"
  input: "convnet/conv5/kernel"
  input: "convnet/conv6/batch_norm/beta"
  input: "convnet/conv6/batch_norm/gamma"
  input: "convnet/conv6/batch_norm/moving_mean"
  input: "convnet/conv6/batch_norm/moving_variance"
  input: "convnet/conv6/bias"
  input: "convnet/conv6/kernel"
  input: "convnet/conv7/bias"
  input: "convnet/conv7/kernel"
  input: "convnet/conv8/batch_norm/beta"
  input: "convnet/conv8/batch_norm/gamma"
  input: "convnet/conv8/batch_norm/moving_mean"
  input: "convnet/conv8/batch_norm/moving_variance"
  input: "convnet/conv8/bias"
  input: "convnet/conv8/kernel"
  input: "global_step"
  input: "rnn/bdrnn1/bw/lstm_cell/bias"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel"
  input: "rnn/bdrnn1/fw/lstm_cell/bias"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel"
  input: "rnn/bdrnn2/bw/lstm_cell/bias"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel"
  input: "rnn/bdrnn2/fw/lstm_cell/bias"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel"
  input: "rnn/logits/bias"
  input: "rnn/logits/kernel"
  input: "train/OptimizeLoss/beta1_power"
  input: "train/OptimizeLoss/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 113
          }
        }
        string_val: "OptimizeLoss/convnet/conv1/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv1/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv1/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv2/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv2/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv3/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv3/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv3/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv4/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv4/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv5/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv5/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv5/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv6/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv6/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv7/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv7/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv7/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
        string_val: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/bias/Adam"
        string_val: "OptimizeLoss/convnet/conv8/bias/Adam_1"
        string_val: "OptimizeLoss/convnet/conv8/kernel/Adam"
        string_val: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/logits/bias/Adam"
        string_val: "OptimizeLoss/rnn/logits/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/logits/kernel/Adam"
        string_val: "OptimizeLoss/rnn/logits/kernel/Adam_1"
        string_val: "convnet/conv1/bias"
        string_val: "convnet/conv1/kernel"
        string_val: "convnet/conv2/batch_norm/beta"
        string_val: "convnet/conv2/batch_norm/gamma"
        string_val: "convnet/conv2/batch_norm/moving_mean"
        string_val: "convnet/conv2/batch_norm/moving_variance"
        string_val: "convnet/conv2/bias"
        string_val: "convnet/conv2/kernel"
        string_val: "convnet/conv3/bias"
        string_val: "convnet/conv3/kernel"
        string_val: "convnet/conv4/batch_norm/beta"
        string_val: "convnet/conv4/batch_norm/gamma"
        string_val: "convnet/conv4/batch_norm/moving_mean"
        string_val: "convnet/conv4/batch_norm/moving_variance"
        string_val: "convnet/conv4/bias"
        string_val: "convnet/conv4/kernel"
        string_val: "convnet/conv5/bias"
        string_val: "convnet/conv5/kernel"
        string_val: "convnet/conv6/batch_norm/beta"
        string_val: "convnet/conv6/batch_norm/gamma"
        string_val: "convnet/conv6/batch_norm/moving_mean"
        string_val: "convnet/conv6/batch_norm/moving_variance"
        string_val: "convnet/conv6/bias"
        string_val: "convnet/conv6/kernel"
        string_val: "convnet/conv7/bias"
        string_val: "convnet/conv7/kernel"
        string_val: "convnet/conv8/batch_norm/beta"
        string_val: "convnet/conv8/batch_norm/gamma"
        string_val: "convnet/conv8/batch_norm/moving_mean"
        string_val: "convnet/conv8/batch_norm/moving_variance"
        string_val: "convnet/conv8/bias"
        string_val: "convnet/conv8/kernel"
        string_val: "global_step"
        string_val: "rnn/bdrnn1/bw/lstm_cell/bias"
        string_val: "rnn/bdrnn1/bw/lstm_cell/kernel"
        string_val: "rnn/bdrnn1/fw/lstm_cell/bias"
        string_val: "rnn/bdrnn1/fw/lstm_cell/kernel"
        string_val: "rnn/bdrnn2/bw/lstm_cell/bias"
        string_val: "rnn/bdrnn2/bw/lstm_cell/kernel"
        string_val: "rnn/bdrnn2/fw/lstm_cell/bias"
        string_val: "rnn/bdrnn2/fw/lstm_cell/kernel"
        string_val: "rnn/logits/bias"
        string_val: "rnn/logits/kernel"
        string_val: "train/OptimizeLoss/beta1_power"
        string_val: "train/OptimizeLoss/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 113
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 113
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/bias/Adam"
  input: "save/RestoreV2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/bias/Adam_1"
  input: "save/RestoreV2:1"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam"
  input: "save/RestoreV2:2"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv1/kernel/Adam_1"
  input: "save/RestoreV2:3"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam"
  input: "save/RestoreV2:4"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:5"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam"
  input: "save/RestoreV2:6"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/batch_norm/gamma/Adam_1"
  input: "save/RestoreV2:7"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/bias/Adam"
  input: "save/RestoreV2:8"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/bias/Adam_1"
  input: "save/RestoreV2:9"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam"
  input: "save/RestoreV2:10"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv2/kernel/Adam_1"
  input: "save/RestoreV2:11"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/bias/Adam"
  input: "save/RestoreV2:12"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/bias/Adam_1"
  input: "save/RestoreV2:13"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam"
  input: "save/RestoreV2:14"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv3/kernel/Adam_1"
  input: "save/RestoreV2:15"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam"
  input: "save/RestoreV2:16"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:17"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam"
  input: "save/RestoreV2:18"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/batch_norm/gamma/Adam_1"
  input: "save/RestoreV2:19"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/bias/Adam"
  input: "save/RestoreV2:20"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/bias/Adam_1"
  input: "save/RestoreV2:21"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam"
  input: "save/RestoreV2:22"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv4/kernel/Adam_1"
  input: "save/RestoreV2:23"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/bias/Adam"
  input: "save/RestoreV2:24"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/bias/Adam_1"
  input: "save/RestoreV2:25"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam"
  input: "save/RestoreV2:26"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv5/kernel/Adam_1"
  input: "save/RestoreV2:27"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam"
  input: "save/RestoreV2:28"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:29"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam"
  input: "save/RestoreV2:30"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/batch_norm/gamma/Adam_1"
  input: "save/RestoreV2:31"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/bias/Adam"
  input: "save/RestoreV2:32"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/bias/Adam_1"
  input: "save/RestoreV2:33"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam"
  input: "save/RestoreV2:34"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv6/kernel/Adam_1"
  input: "save/RestoreV2:35"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/bias/Adam"
  input: "save/RestoreV2:36"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/bias/Adam_1"
  input: "save/RestoreV2:37"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam"
  input: "save/RestoreV2:38"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv7/kernel/Adam_1"
  input: "save/RestoreV2:39"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam"
  input: "save/RestoreV2:40"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:41"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam"
  input: "save/RestoreV2:42"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/batch_norm/gamma/Adam_1"
  input: "save/RestoreV2:43"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/bias/Adam"
  input: "save/RestoreV2:44"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/bias/Adam_1"
  input: "save/RestoreV2:45"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam"
  input: "save/RestoreV2:46"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "OptimizeLoss/convnet/conv8/kernel/Adam_1"
  input: "save/RestoreV2:47"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam"
  input: "save/RestoreV2:48"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:49"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:50"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/bw/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:51"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam"
  input: "save/RestoreV2:52"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:53"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:54"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn1/fw/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:55"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam"
  input: "save/RestoreV2:56"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:57"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:58"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/bw/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:59"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam"
  input: "save/RestoreV2:60"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:61"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:62"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "OptimizeLoss/rnn/bdrnn2/fw/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:63"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/bias/Adam"
  input: "save/RestoreV2:64"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/bias/Adam_1"
  input: "save/RestoreV2:65"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/kernel/Adam"
  input: "save/RestoreV2:66"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "OptimizeLoss/rnn/logits/kernel/Adam_1"
  input: "save/RestoreV2:67"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "convnet/conv1/bias"
  input: "save/RestoreV2:68"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "convnet/conv1/kernel"
  input: "save/RestoreV2:69"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "convnet/conv2/batch_norm/beta"
  input: "save/RestoreV2:70"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "convnet/conv2/batch_norm/gamma"
  input: "save/RestoreV2:71"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "convnet/conv2/batch_norm/moving_mean"
  input: "save/RestoreV2:72"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "convnet/conv2/batch_norm/moving_variance"
  input: "save/RestoreV2:73"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "convnet/conv2/bias"
  input: "save/RestoreV2:74"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "convnet/conv2/kernel"
  input: "save/RestoreV2:75"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "convnet/conv3/bias"
  input: "save/RestoreV2:76"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "convnet/conv3/kernel"
  input: "save/RestoreV2:77"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "convnet/conv4/batch_norm/beta"
  input: "save/RestoreV2:78"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "convnet/conv4/batch_norm/gamma"
  input: "save/RestoreV2:79"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "convnet/conv4/batch_norm/moving_mean"
  input: "save/RestoreV2:80"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "convnet/conv4/batch_norm/moving_variance"
  input: "save/RestoreV2:81"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "convnet/conv4/bias"
  input: "save/RestoreV2:82"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "convnet/conv4/kernel"
  input: "save/RestoreV2:83"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "convnet/conv5/bias"
  input: "save/RestoreV2:84"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "convnet/conv5/kernel"
  input: "save/RestoreV2:85"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "convnet/conv6/batch_norm/beta"
  input: "save/RestoreV2:86"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "convnet/conv6/batch_norm/gamma"
  input: "save/RestoreV2:87"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "convnet/conv6/batch_norm/moving_mean"
  input: "save/RestoreV2:88"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "convnet/conv6/batch_norm/moving_variance"
  input: "save/RestoreV2:89"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "convnet/conv6/bias"
  input: "save/RestoreV2:90"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "convnet/conv6/kernel"
  input: "save/RestoreV2:91"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "convnet/conv7/bias"
  input: "save/RestoreV2:92"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "convnet/conv7/kernel"
  input: "save/RestoreV2:93"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "convnet/conv8/batch_norm/beta"
  input: "save/RestoreV2:94"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "convnet/conv8/batch_norm/gamma"
  input: "save/RestoreV2:95"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "convnet/conv8/batch_norm/moving_mean"
  input: "save/RestoreV2:96"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "convnet/conv8/batch_norm/moving_variance"
  input: "save/RestoreV2:97"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "convnet/conv8/bias"
  input: "save/RestoreV2:98"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "convnet/conv8/kernel"
  input: "save/RestoreV2:99"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "rnn/bdrnn1/bw/lstm_cell/bias"
  input: "save/RestoreV2:101"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "rnn/bdrnn1/bw/lstm_cell/kernel"
  input: "save/RestoreV2:102"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "rnn/bdrnn1/fw/lstm_cell/bias"
  input: "save/RestoreV2:103"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "rnn/bdrnn1/fw/lstm_cell/kernel"
  input: "save/RestoreV2:104"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn1/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "rnn/bdrnn2/bw/lstm_cell/bias"
  input: "save/RestoreV2:105"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "rnn/bdrnn2/bw/lstm_cell/kernel"
  input: "save/RestoreV2:106"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/bw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "rnn/bdrnn2/fw/lstm_cell/bias"
  input: "save/RestoreV2:107"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "rnn/bdrnn2/fw/lstm_cell/kernel"
  input: "save/RestoreV2:108"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/bdrnn2/fw/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "rnn/logits/bias"
  input: "save/RestoreV2:109"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "rnn/logits/kernel"
  input: "save/RestoreV2:110"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 5530
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "train/OptimizeLoss/beta1_power"
  input: "save/RestoreV2:111"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "train/OptimizeLoss/beta2_power"
  input: "save/RestoreV2:112"
  device: "/device:CPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@convnet/conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_100"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  device: "/device:CPU:1"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
versions {
  producer: 26
}
